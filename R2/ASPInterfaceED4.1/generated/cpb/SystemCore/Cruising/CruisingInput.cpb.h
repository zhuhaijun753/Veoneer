/* Automatically generated pb header */
/* Generated by Protocol Buffers - 1 */

#ifndef SYSTEMCORE_CRUISING_CRUISINGINPUT_INCLUDED
#define SYSTEMCORE_CRUISING_CRUISINGINPUT_INCLUDED
#include "Tools/CProtobuf/pb.h"
#include "Tools/CProtobuf/pb_decode.h"
#include "Tools/CProtobuf/pb_encode.h"

#if PB_PROTO_HEADER_VERSION != 1
#error Regenerate this file with the current version of pb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Maximum encoded size of messages (where known) */
#define SystemCore_Cruising_DriverAlertControlInput_size                                 (2)
#define SystemCore_Cruising_LaneChangeAssistInput_size                                   (9)
#define SystemCore_Cruising_RiskMitigationSupportInput_size                              (2)
#define SystemCore_Cruising_TrafficAssistInput_size                                      (8)

/* Message IDs (where set with "identifier" option) */
#define SystemCore_Cruising_TrafficAssistInput_source                                    3U
#define SystemCore_Cruising_TrafficAssistInput_identifier                                777U
#define SystemCore_Cruising_TrafficAssistInput_majorVersion                              1U
#define SystemCore_Cruising_TrafficAssistInput_minorVersion                              0U
#define SystemCore_Cruising_LaneChangeAssistInput_source                                 3U
#define SystemCore_Cruising_LaneChangeAssistInput_identifier                             778U
#define SystemCore_Cruising_LaneChangeAssistInput_majorVersion                           1U
#define SystemCore_Cruising_LaneChangeAssistInput_minorVersion                           0U
#define SystemCore_Cruising_RiskMitigationSupportInput_source                            3U
#define SystemCore_Cruising_RiskMitigationSupportInput_identifier                        779U
#define SystemCore_Cruising_RiskMitigationSupportInput_majorVersion                      1U
#define SystemCore_Cruising_RiskMitigationSupportInput_minorVersion                      0U
#define SystemCore_Cruising_DriverAlertControlInput_source                               3U
#define SystemCore_Cruising_DriverAlertControlInput_identifier                           780U
#define SystemCore_Cruising_DriverAlertControlInput_majorVersion                         1U
#define SystemCore_Cruising_DriverAlertControlInput_minorVersion                         0U

/* Enum definitions */
typedef enum _SystemCore_Cruising_LateralDirection {
    SystemCore_Cruising_LateralDirection_None = 0,
    SystemCore_Cruising_LateralDirection_Left = 1,
    SystemCore_Cruising_LateralDirection_Right = 2
} SystemCore_Cruising_LateralDirection;
#define SystemCore_Cruising_LateralDirection_MIN SystemCore_Cruising_LateralDirection_None
#define SystemCore_Cruising_LateralDirection_MAX SystemCore_Cruising_LateralDirection_Right
#define SystemCore_Cruising_LateralDirection_ARRAYSIZE ((SystemCore_Cruising_LateralDirection)(SystemCore_Cruising_LateralDirection_Right+1))

typedef enum _SystemCore_Cruising_RmsStatus {
    SystemCore_Cruising_RmsStatus_Off = 0,
    SystemCore_Cruising_RmsStatus_Standby = 1,
    SystemCore_Cruising_RmsStatus_Level1 = 2,
    SystemCore_Cruising_RmsStatus_Level2 = 3,
    SystemCore_Cruising_RmsStatus_Level3 = 4,
    SystemCore_Cruising_RmsStatus_Level4 = 5,
    SystemCore_Cruising_RmsStatus_Level5 = 6,
    SystemCore_Cruising_RmsStatus_Level6 = 7,
    SystemCore_Cruising_RmsStatus_Level7 = 8,
    SystemCore_Cruising_RmsStatus_Level8 = 9
} SystemCore_Cruising_RmsStatus;
#define SystemCore_Cruising_RmsStatus_MIN SystemCore_Cruising_RmsStatus_Off
#define SystemCore_Cruising_RmsStatus_MAX SystemCore_Cruising_RmsStatus_Level8
#define SystemCore_Cruising_RmsStatus_ARRAYSIZE ((SystemCore_Cruising_RmsStatus)(SystemCore_Cruising_RmsStatus_Level8+1))

/* Struct definitions */
typedef struct _SystemCore_Cruising_DriverAlertControlInput {
    /** DacActivated
     * Indicates that Driver Alert Control is activated from HMI.
     */
    bool dacActivated;
} SystemCore_Cruising_DriverAlertControlInput;

typedef struct _SystemCore_Cruising_LaneChangeAssistInput {
    /** Enable
     * Platform ok to enable Lane Change Assist.All criteria are met for Lane Change Assistto go from Off to Standby.
     */
    bool enable;
    /** LaneChangeRequestByDriver */
    SystemCore_Cruising_LateralDirection laneChangeRequestByDriver;
    /** LaneChangeAbortRequestByDriver
     * Lane change aborted by driver specified in R79
     */
    bool laneChangeAbortRequestByDriver;
    /** RearRadarDetectionRange
     * The current radial detection range of the rear radars
     * Unit: m
     * Min: 0
     * Max: 255
     */
    uint8_t rearRadarDetectionRange;
} SystemCore_Cruising_LaneChangeAssistInput;

typedef struct _SystemCore_Cruising_RiskMitigationSupportInput {
    /** RmsStatus
     * Information if RMS is off, standby or requested intervention level
     */
    SystemCore_Cruising_RmsStatus rmsStatus;
} SystemCore_Cruising_RiskMitigationSupportInput;

typedef struct _SystemCore_Cruising_TrafficAssistInput {
    /** Enable
     * Platform ok to enable Traffic Assist.All criteria are met for Traffic Assistto go from Off to Standby.
     */
    bool enable;
    /** SteeringEnabled
     * Request steering support from Traffic Assist.
     */
    bool steeringEnabled;
    /** DriverInTheLoopDetected
     * Driver confirmed to be in control of vehicle during Traffic Assist steering support. Detection might be done by DMC, steering wheel sensor or any other suitable method. driver_in_the_loop_detected has to be true often enough to not cause Hands Off warnings or maneuver aborts.
     */
    bool driverInTheLoopDetected;
    /** TrafficAssistIsSteering
     * TA steering confirmed by platform.
     */
    bool trafficAssistIsSteering;
} SystemCore_Cruising_TrafficAssistInput;

/* Struct field encoding specification for pb */
extern const pb_field_t SystemCore_Cruising_TrafficAssistInput_fields[5];
extern const pb_field_t SystemCore_Cruising_LaneChangeAssistInput_fields[5];
extern const pb_field_t SystemCore_Cruising_RiskMitigationSupportInput_fields[2];
extern const pb_field_t SystemCore_Cruising_DriverAlertControlInput_fields[2];
#ifdef __cplusplus
} /* extern "C" */
#endif

#endif /* SYSTEMCORE_CRUISING_CRUISINGINPUT_INCLUDED */
