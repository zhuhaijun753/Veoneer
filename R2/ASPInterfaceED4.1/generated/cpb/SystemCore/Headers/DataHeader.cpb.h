/* Automatically generated pb header */
/* Generated by Protocol Buffers - 1 */

#ifndef SYSTEMCORE_HEADERS_DATAHEADER_INCLUDED
#define SYSTEMCORE_HEADERS_DATAHEADER_INCLUDED
#include "Tools/CProtobuf/pb.h"
#include "Tools/CProtobuf/pb_decode.h"
#include "Tools/CProtobuf/pb_encode.h"

#include "Tools/Extension/DataSources.cpb.h"
#if PB_PROTO_HEADER_VERSION != 1
#error Regenerate this file with the current version of pb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Maximum encoded size of messages (where known) */
#define SystemCore_Headers_DataHeader_size                                               (14)

/* Message IDs (where set with "identifier" option) */

/* Struct definitions */
typedef struct _SystemCore_Headers_DataHeader {
    /** Source
     * Describes who provided the data. Used together with identifier to understand what data is encoded in the InterfaceHeaders data byte array.
     */
    DataSource source;
    /** Identifier
     * Identifier is used together with source to determine what data is packed in the InterfaceHeaders data byte array. It is defined for messages to be encoded in the veoneer_message_options.identifier parameter.
     * Min: 0
     * Max: 4.29497e+09
     */
    uint32_t identifier;
    /** MajorVersion
     * Major version is incremented for breaking interface changes and need to match decoding version. It is defined for messages to be encoded in the veoneer_message_options.major_version parameter.
     * Min: 0
     * Max: 255
     */
    uint8_t majorVersion;
    /** MinorVersion
     * Minor version is incremented for every change in the interface specification that is not a major version. It is defined for messages to be encoded in the veoneer_message_options.minor_version parameter.
     * Min: 0
     * Max: 255
     */
    uint8_t minorVersion;
} SystemCore_Headers_DataHeader;

/* Struct field encoding specification for pb */
extern const pb_field_t SystemCore_Headers_DataHeader_fields[5];
#ifdef __cplusplus
} /* extern "C" */
#endif

#endif /* SYSTEMCORE_HEADERS_DATAHEADER_INCLUDED */
