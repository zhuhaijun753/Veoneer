/* Automatically generated pb header */
/* Generated by Protocol Buffers - 1 */

#ifndef ZENUITY_LSS_OUTPUT_INCLUDED
#define ZENUITY_LSS_OUTPUT_INCLUDED
#include "Tools/CProtobuf/pb.h"
#include "Tools/CProtobuf/pb_decode.h"
#include "Tools/CProtobuf/pb_encode.h"

#if PB_PROTO_HEADER_VERSION != 1
#error Regenerate this file with the current version of pb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Maximum encoded size of messages (where known) */
#define Zenuity_LaneSupportSystems_SideAvailable_size                                    (4)
#define Zenuity_LaneSupportSystems_FeatureOutput_size                                    ((6 + Zenuity_LaneSupportSystems_SideAvailable_size) + PB_VARINT_MAX_ENCODED_SIZE)
#define Zenuity_LaneSupportSystems_LssOutput_size                                        ((12 + Zenuity_LaneSupportSystems_FeatureOutput_size + Zenuity_LaneSupportSystems_FeatureOutput_size + Zenuity_LaneSupportSystems_FeatureOutput_size + Zenuity_LaneSupportSystems_FeatureOutput_size + Zenuity_LaneSupportSystems_FeatureOutput_size) + PB_VARINT_MAX_ENCODED_SIZE)

/* Message IDs (where set with "identifier" option) */
#define Zenuity_LaneSupportSystems_LssOutput_source                                      1U
#define Zenuity_LaneSupportSystems_LssOutput_identifier                                  20U
#define Zenuity_LaneSupportSystems_LssOutput_majorVersion                                1U
#define Zenuity_LaneSupportSystems_LssOutput_minorVersion                                0U

/* Enum definitions */
typedef enum _Zenuity_LaneSupportSystems_Side {
    Zenuity_LaneSupportSystems_Side_None = 0,
    Zenuity_LaneSupportSystems_Side_Left = 1,
    Zenuity_LaneSupportSystems_Side_Right = 2,
    Zenuity_LaneSupportSystems_Side_LeftAndRight = 3
} Zenuity_LaneSupportSystems_Side;
#define Zenuity_LaneSupportSystems_Side_MIN Zenuity_LaneSupportSystems_Side_None
#define Zenuity_LaneSupportSystems_Side_MAX Zenuity_LaneSupportSystems_Side_LeftAndRight
#define Zenuity_LaneSupportSystems_Side_ARRAYSIZE ((Zenuity_LaneSupportSystems_Side)(Zenuity_LaneSupportSystems_Side_LeftAndRight+1))

typedef enum _Zenuity_LaneSupportSystems_Status {
    Zenuity_LaneSupportSystems_Status_Disabled = 0,
    Zenuity_LaneSupportSystems_Status_Unavailable = 1,
    Zenuity_LaneSupportSystems_Status_Available = 2
} Zenuity_LaneSupportSystems_Status;
#define Zenuity_LaneSupportSystems_Status_MIN Zenuity_LaneSupportSystems_Status_Disabled
#define Zenuity_LaneSupportSystems_Status_MAX Zenuity_LaneSupportSystems_Status_Available
#define Zenuity_LaneSupportSystems_Status_ARRAYSIZE ((Zenuity_LaneSupportSystems_Status)(Zenuity_LaneSupportSystems_Status_Available+1))

/* Struct definitions */
typedef struct _Zenuity_LaneSupportSystems_SideAvailable {
    /** Left
     * Available left side
     */
    bool left;
    /** Right
     * Available right side
     */
    bool right;
} Zenuity_LaneSupportSystems_SideAvailable;

typedef struct _Zenuity_LaneSupportSystems_FeatureOutput {
    /** Status
     * Information if feature is available
     */
    Zenuity_LaneSupportSystems_Status status;
    /** Available
     * Feature side dependent availability
     */
    Zenuity_LaneSupportSystems_SideAvailable available;
    /** WarningSide
     * Trigger warning for the feature
     */
    Zenuity_LaneSupportSystems_Side warningSide;
} Zenuity_LaneSupportSystems_FeatureOutput;

typedef struct _Zenuity_LaneSupportSystems_LssOutput {
    /** Ldw
     * Feature output for LDW function
     */
    Zenuity_LaneSupportSystems_FeatureOutput ldw;
    /** Lka
     * Feature output for LKA function
     */
    Zenuity_LaneSupportSystems_FeatureOutput lka;
    /** ElkaRoadEdge
     * Feature output for eLKA Road Edge function
     */
    Zenuity_LaneSupportSystems_FeatureOutput elkaRoadEdge;
    /** ElkaFrontObjects
     * Feature output for eLKA Front Objects function (e.g. oncoming)
     */
    Zenuity_LaneSupportSystems_FeatureOutput elkaFrontObjects;
    /** ElkaRearObjects
     * Feature output for eLKA Rear Objects function (e.g. Blind Spot)
     */
    Zenuity_LaneSupportSystems_FeatureOutput elkaRearObjects;
    /** RequestPostEventMessage
     * Post event message request
     */
    bool requestPostEventMessage;
} Zenuity_LaneSupportSystems_LssOutput;

/* Struct field encoding specification for pb */
extern const pb_field_t Zenuity_LaneSupportSystems_SideAvailable_fields[3];
extern const pb_field_t Zenuity_LaneSupportSystems_FeatureOutput_fields[4];
extern const pb_field_t Zenuity_LaneSupportSystems_LssOutput_fields[7];
#ifdef __cplusplus
} /* extern "C" */
#endif

#endif /* ZENUITY_LSS_OUTPUT_INCLUDED */
