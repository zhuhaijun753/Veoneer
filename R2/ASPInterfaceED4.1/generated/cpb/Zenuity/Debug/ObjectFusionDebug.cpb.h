/* Automatically generated pb header */
/* Generated by Protocol Buffers - 1 */

#ifndef ZENUITY_DEBUG_OBJECTFUSIONDEBUG_INCLUDED
#define ZENUITY_DEBUG_OBJECTFUSIONDEBUG_INCLUDED
#include "Tools/CProtobuf/pb.h"
#include "Tools/CProtobuf/pb_decode.h"
#include "Tools/CProtobuf/pb_encode.h"

#include "VisionCore/Common/Coords.cpb.h"
#if PB_PROTO_HEADER_VERSION != 1
#error Regenerate this file with the current version of pb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Maximum encoded size of messages (where known) */
#define Zenuity_Debug_FusedObject_size                                                   ((13 + VisionCore_Common_Coord2_m_0_01_size) + PB_VARINT_MAX_ENCODED_SIZE)
#define Zenuity_Debug_ObjectFusionDebugOutput_size                                       (736)

/* Message IDs (where set with "identifier" option) */
#define Zenuity_Debug_ObjectFusionDebugOutput_source                                     1U
#define Zenuity_Debug_ObjectFusionDebugOutput_identifier                                 9010U
#define Zenuity_Debug_ObjectFusionDebugOutput_majorVersion                               1U
#define Zenuity_Debug_ObjectFusionDebugOutput_minorVersion                               0U

/* Enum definitions */
typedef enum _Zenuity_Debug_ObjectFusionObjectSource {
    Zenuity_Debug_ObjectFusionObjectSource_None = 0,
    Zenuity_Debug_ObjectFusionObjectSource_Vision = 1,
    Zenuity_Debug_ObjectFusionObjectSource_Radar = 2,
    Zenuity_Debug_ObjectFusionObjectSource_Fused = 3
} Zenuity_Debug_ObjectFusionObjectSource;
#define Zenuity_Debug_ObjectFusionObjectSource_MIN Zenuity_Debug_ObjectFusionObjectSource_None
#define Zenuity_Debug_ObjectFusionObjectSource_MAX Zenuity_Debug_ObjectFusionObjectSource_Fused
#define Zenuity_Debug_ObjectFusionObjectSource_ARRAYSIZE ((Zenuity_Debug_ObjectFusionObjectSource)(Zenuity_Debug_ObjectFusionObjectSource_Fused+1))

/* Struct definitions */
typedef struct _Zenuity_Debug_FusedObject {
    /** FusionId
     * Fused Object ID
     * Min: 0
     * Max: 255
     */
    uint8_t fusionId;
    /** VisionId
     * Vision Object ID. 0 means invalid.
     * Min: 0
     * Max: 255
     */
    uint8_t visionId;
    /** RadarId
     * Radar Object ID. 0 means invalid.
     * Min: 0
     * Max: 255
     */
    uint8_t radarId;
    /** Source
     * The sensor type(s) the object information has been derived from.
     */
    Zenuity_Debug_ObjectFusionObjectSource source;
    /** Position
     * Position of the object
     */
    VisionCore_Common_Coord2_m_0_01 position;
} Zenuity_Debug_FusedObject;

typedef struct _Zenuity_Debug_ObjectFusionDebugOutput {
    pb_size_t tracks_count;
    /** Tracks
     * List of forward objects
     */
    Zenuity_Debug_FusedObject tracks[32];
} Zenuity_Debug_ObjectFusionDebugOutput;

/* Struct field encoding specification for pb */
extern const pb_field_t Zenuity_Debug_FusedObject_fields[6];
extern const pb_field_t Zenuity_Debug_ObjectFusionDebugOutput_fields[2];
#ifdef __cplusplus
} /* extern "C" */
#endif

#endif /* ZENUITY_DEBUG_OBJECTFUSIONDEBUG_INCLUDED */
