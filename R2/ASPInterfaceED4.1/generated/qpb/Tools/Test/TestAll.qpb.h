/* Automatically generated qpb header */
/* SPP version 2.0.0 */
/* Generated by Quick Protocol Buffers - 2 */

#ifndef TOOLS_TEST_TESTALL_INCLUDED
#define TOOLS_TEST_TESTALL_INCLUDED

#include "Tools/Test/TestAll_types.qpb.h"


#include "Tools/QuickProtobuf/qpb.h"

#if QPB_PROTO_HEADER_VERSION != 2
#error Regenerate this file with the current version of qpb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Maximum encoded size of messages (where known) */
/* InterfacesTest_TestAllTypesPointers_static_size depends on runtime parameters */
#define InterfacesTest_TestAllTypesPointers_static_size                                  12
#define InterfacesTest_DeepSubMessage_MessageInSubMessage_SubMessageInSubMessage_size    (2)
#define InterfacesTest_ProcessedTypes_size                                               (198)
#define InterfacesTest_SubSubMessage_size                                                (6)
#define InterfacesTest_TestAllTypes_size                                                 (181)
#define InterfacesTest_TestAllTypesArray_size                                            (875)
#define InterfacesTest_ArrayOfProcessedTypes_size                                        (1005)
#define InterfacesTest_DeepSubMessage_MessageInSubMessage_size                           ((8 + InterfacesTest_DeepSubMessage_MessageInSubMessage_SubMessageInSubMessage_size) + QPB_VARINT_MAX_ENCODED_SIZE)
#define InterfacesTest_SubMessage_size                                                   ((24 + InterfacesTest_SubSubMessage_size) + QPB_VARINT_MAX_ENCODED_SIZE)
#define InterfacesTest_DeepSubMessage_size                                               ((269 + InterfacesTest_DeepSubMessage_MessageInSubMessage_size) + QPB_VARINT_MAX_ENCODED_SIZE)
#define InterfacesTest_MainMessage_size                                                  ((5 + InterfacesTest_SubMessage_size + InterfacesTest_DeepSubMessage_size) + QPB_VARINT_MAX_ENCODED_SIZE)

/* Message IDs (where set with "identifier" option) */
#define InterfacesTest_TestAllTypes_source                                               2U
#define InterfacesTest_TestAllTypes_identifier                                           1234U
#define InterfacesTest_TestAllTypes_majorVersion                                         5U
#define InterfacesTest_TestAllTypes_minorVersion                                         2U
#define InterfacesTest_TestAllTypesArray_source                                          2U
#define InterfacesTest_TestAllTypesArray_identifier                                      12345U
#define InterfacesTest_TestAllTypesArray_majorVersion                                    5U
#define InterfacesTest_TestAllTypesArray_minorVersion                                    2U

/* Encoding / decoding functions
 * Returns true on success, false on any failure.
 * Notes on Decode:
 * User is expected to provide a struct with wanted/default values (all zeroes).
 * A case where default values are not wanted is if you want to merge two messages
 * i.e. update only the fields that exist in the new message.
 * Note: These functions supports NULL termination of messages which most other
 *       protobuf implementations do not just so you know
 */
bool encode_InterfacesTest_TestAllTypesPointers_Raw(qpb_ostream_t *const stream, const InterfacesTest_TestAllTypesPointers_Raw *const data);
bool decode_InterfacesTest_TestAllTypesPointers_Raw(qpb_istream_t *const stream, InterfacesTest_TestAllTypesPointers_Raw *const data);
#define encode_InterfacesTest_TestAllTypesPointers encode_InterfacesTest_TestAllTypesPointers_Raw
#define decode_InterfacesTest_TestAllTypesPointers decode_InterfacesTest_TestAllTypesPointers_Raw

bool encode_InterfacesTest_DeepSubMessage_MessageInSubMessage_SubMessageInSubMessage_Raw(qpb_ostream_t *const stream, const InterfacesTest_DeepSubMessage_MessageInSubMessage_SubMessageInSubMessage_Raw *const data);
bool decode_InterfacesTest_DeepSubMessage_MessageInSubMessage_SubMessageInSubMessage_Raw(qpb_istream_t *const stream, InterfacesTest_DeepSubMessage_MessageInSubMessage_SubMessageInSubMessage_Raw *const data);
#define encode_InterfacesTest_DeepSubMessage_MessageInSubMessage_SubMessageInSubMessage encode_InterfacesTest_DeepSubMessage_MessageInSubMessage_SubMessageInSubMessage_Raw
#define decode_InterfacesTest_DeepSubMessage_MessageInSubMessage_SubMessageInSubMessage decode_InterfacesTest_DeepSubMessage_MessageInSubMessage_SubMessageInSubMessage_Raw

bool encode_InterfacesTest_ProcessedTypes_Raw(qpb_ostream_t *const stream, const InterfacesTest_ProcessedTypes_Raw *const data);
bool decode_InterfacesTest_ProcessedTypes_Raw(qpb_istream_t *const stream, InterfacesTest_ProcessedTypes_Raw *const data);
bool encode_InterfacesTest_ProcessedTypes(qpb_ostream_t *const stream, const InterfacesTest_ProcessedTypes *const data);
bool decode_InterfacesTest_ProcessedTypes(qpb_istream_t *const stream, InterfacesTest_ProcessedTypes *const data);

bool encode_InterfacesTest_SubSubMessage_Raw(qpb_ostream_t *const stream, const InterfacesTest_SubSubMessage_Raw *const data);
bool decode_InterfacesTest_SubSubMessage_Raw(qpb_istream_t *const stream, InterfacesTest_SubSubMessage_Raw *const data);
#define encode_InterfacesTest_SubSubMessage encode_InterfacesTest_SubSubMessage_Raw
#define decode_InterfacesTest_SubSubMessage decode_InterfacesTest_SubSubMessage_Raw

bool encode_InterfacesTest_TestAllTypes_Raw(qpb_ostream_t *const stream, const InterfacesTest_TestAllTypes_Raw *const data);
bool decode_InterfacesTest_TestAllTypes_Raw(qpb_istream_t *const stream, InterfacesTest_TestAllTypes_Raw *const data);
bool encode_InterfacesTest_TestAllTypes(qpb_ostream_t *const stream, const InterfacesTest_TestAllTypes *const data);
bool decode_InterfacesTest_TestAllTypes(qpb_istream_t *const stream, InterfacesTest_TestAllTypes *const data);

bool encode_InterfacesTest_TestAllTypesArray_Raw(qpb_ostream_t *const stream, const InterfacesTest_TestAllTypesArray_Raw *const data);
bool decode_InterfacesTest_TestAllTypesArray_Raw(qpb_istream_t *const stream, InterfacesTest_TestAllTypesArray_Raw *const data);
bool encode_InterfacesTest_TestAllTypesArray(qpb_ostream_t *const stream, const InterfacesTest_TestAllTypesArray *const data);
bool decode_InterfacesTest_TestAllTypesArray(qpb_istream_t *const stream, InterfacesTest_TestAllTypesArray *const data);

bool encode_InterfacesTest_ArrayOfProcessedTypes_Raw(qpb_ostream_t *const stream, const InterfacesTest_ArrayOfProcessedTypes_Raw *const data);
bool decode_InterfacesTest_ArrayOfProcessedTypes_Raw(qpb_istream_t *const stream, InterfacesTest_ArrayOfProcessedTypes_Raw *const data);
bool encode_InterfacesTest_ArrayOfProcessedTypes(qpb_ostream_t *const stream, const InterfacesTest_ArrayOfProcessedTypes *const data);
bool decode_InterfacesTest_ArrayOfProcessedTypes(qpb_istream_t *const stream, InterfacesTest_ArrayOfProcessedTypes *const data);

bool encode_InterfacesTest_DeepSubMessage_MessageInSubMessage_Raw(qpb_ostream_t *const stream, const InterfacesTest_DeepSubMessage_MessageInSubMessage_Raw *const data);
bool decode_InterfacesTest_DeepSubMessage_MessageInSubMessage_Raw(qpb_istream_t *const stream, InterfacesTest_DeepSubMessage_MessageInSubMessage_Raw *const data);
#define encode_InterfacesTest_DeepSubMessage_MessageInSubMessage encode_InterfacesTest_DeepSubMessage_MessageInSubMessage_Raw
#define decode_InterfacesTest_DeepSubMessage_MessageInSubMessage decode_InterfacesTest_DeepSubMessage_MessageInSubMessage_Raw

bool encode_InterfacesTest_SubMessage_Raw(qpb_ostream_t *const stream, const InterfacesTest_SubMessage_Raw *const data);
bool decode_InterfacesTest_SubMessage_Raw(qpb_istream_t *const stream, InterfacesTest_SubMessage_Raw *const data);
#define encode_InterfacesTest_SubMessage encode_InterfacesTest_SubMessage_Raw
#define decode_InterfacesTest_SubMessage decode_InterfacesTest_SubMessage_Raw

bool encode_InterfacesTest_DeepSubMessage_Raw(qpb_ostream_t *const stream, const InterfacesTest_DeepSubMessage_Raw *const data);
bool decode_InterfacesTest_DeepSubMessage_Raw(qpb_istream_t *const stream, InterfacesTest_DeepSubMessage_Raw *const data);
#define encode_InterfacesTest_DeepSubMessage encode_InterfacesTest_DeepSubMessage_Raw
#define decode_InterfacesTest_DeepSubMessage decode_InterfacesTest_DeepSubMessage_Raw

bool encode_InterfacesTest_MainMessage_Raw(qpb_ostream_t *const stream, const InterfacesTest_MainMessage_Raw *const data);
bool decode_InterfacesTest_MainMessage_Raw(qpb_istream_t *const stream, InterfacesTest_MainMessage_Raw *const data);
#define encode_InterfacesTest_MainMessage encode_InterfacesTest_MainMessage_Raw
#define decode_InterfacesTest_MainMessage decode_InterfacesTest_MainMessage_Raw

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif /* TOOLS_TEST_TESTALL_INCLUDED */
