/* Automatically generated qpb header */
/* SPP version 2.0.0 */
/* Generated by Quick Protocol Buffers - 2 */

#ifndef ZENUITY_DEBUG_CALONG_DEBUG_INCLUDED
#define ZENUITY_DEBUG_CALONG_DEBUG_INCLUDED

#include "Zenuity/Debug/CaLong_Debug_types.qpb.h"


#include "Tools/QuickProtobuf/qpb.h"

#if QPB_PROTO_HEADER_VERSION != 2
#error Regenerate this file with the current version of qpb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Maximum encoded size of messages (where known) */
#define Zenuity_Debug_AebGeneralStatusDiagnostic_size                                    (6)
#define Zenuity_Debug_AebInhibitionDiagnostic_size                                       (18)
#define Zenuity_Debug_AebPrimaryTarget_size                                              (4)
#define Zenuity_Debug_BrakingDiagnostic_size                                             (12)
#define Zenuity_Debug_BrakingGainInhibitConditionStatus_size                             (8)
#define Zenuity_Debug_CollisionWarningInhibitConditionStatus_size                        (8)
#define Zenuity_Debug_CollisionWarningStartConditionStatus_size                          (12)
#define Zenuity_Debug_EvasiveManoeuvreAssistDiagnostics_size                             (11)
#define Zenuity_Debug_HighestThreatInfo_size                                             (12)
#define Zenuity_Debug_ObjectManeuverOverlapsHostManeuver_size                            (8)
#define Zenuity_Debug_ThreatAssessmentDiagnosticObject_size                              (79)
#define Zenuity_Debug_ASILThreatAssesmentDiagnostics_size                                ((8 + Zenuity_Debug_ObjectManeuverOverlapsHostManeuver_size) + QPB_VARINT_MAX_ENCODED_SIZE)
#define Zenuity_Debug_AllBrakeDiagnostics_size                                           ((4 + Zenuity_Debug_BrakingDiagnostic_size + Zenuity_Debug_BrakingDiagnostic_size) + QPB_VARINT_MAX_ENCODED_SIZE)
#define Zenuity_Debug_CollisionWarningDiagnostics_size                                   ((18 + Zenuity_Debug_BrakingGainInhibitConditionStatus_size + Zenuity_Debug_CollisionWarningInhibitConditionStatus_size + Zenuity_Debug_CollisionWarningStartConditionStatus_size) + QPB_VARINT_MAX_ENCODED_SIZE)
#define Zenuity_Debug_ThreatAssessmentDiagnostics_size                                   (405)
#define Zenuity_Debug_VruCollisionAvoidanceDiagnostics_size                              ((2 + Zenuity_Debug_HighestThreatInfo_size) + QPB_VARINT_MAX_ENCODED_SIZE)
#define Zenuity_Debug_AebDiagnostics_size                                                ((8 + Zenuity_Debug_AllBrakeDiagnostics_size + Zenuity_Debug_AebInhibitionDiagnostic_size + Zenuity_Debug_AebGeneralStatusDiagnostic_size + Zenuity_Debug_AebPrimaryTarget_size) + QPB_VARINT_MAX_ENCODED_SIZE)

/* Message IDs (where set with "identifier" option) */
#define Zenuity_Debug_AebDiagnostics_source                                              1U
#define Zenuity_Debug_AebDiagnostics_identifier                                          9001U
#define Zenuity_Debug_AebDiagnostics_majorVersion                                        1U
#define Zenuity_Debug_AebDiagnostics_minorVersion                                        1U
#define Zenuity_Debug_CollisionWarningDiagnostics_source                                 1U
#define Zenuity_Debug_CollisionWarningDiagnostics_identifier                             9002U
#define Zenuity_Debug_CollisionWarningDiagnostics_majorVersion                           1U
#define Zenuity_Debug_CollisionWarningDiagnostics_minorVersion                           2U
#define Zenuity_Debug_EvasiveManoeuvreAssistDiagnostics_source                           1U
#define Zenuity_Debug_EvasiveManoeuvreAssistDiagnostics_identifier                       9003U
#define Zenuity_Debug_EvasiveManoeuvreAssistDiagnostics_majorVersion                     1U
#define Zenuity_Debug_EvasiveManoeuvreAssistDiagnostics_minorVersion                     0U
#define Zenuity_Debug_ThreatAssessmentDiagnostics_source                                 1U
#define Zenuity_Debug_ThreatAssessmentDiagnostics_identifier                             9004U
#define Zenuity_Debug_ThreatAssessmentDiagnostics_majorVersion                           2U
#define Zenuity_Debug_ThreatAssessmentDiagnostics_minorVersion                           0U
#define Zenuity_Debug_ASILThreatAssesmentDiagnostics_source                              1U
#define Zenuity_Debug_ASILThreatAssesmentDiagnostics_identifier                          9005U
#define Zenuity_Debug_ASILThreatAssesmentDiagnostics_majorVersion                        1U
#define Zenuity_Debug_ASILThreatAssesmentDiagnostics_minorVersion                        0U
#define Zenuity_Debug_VruCollisionAvoidanceDiagnostics_source                            1U
#define Zenuity_Debug_VruCollisionAvoidanceDiagnostics_identifier                        9006U
#define Zenuity_Debug_VruCollisionAvoidanceDiagnostics_majorVersion                      2U
#define Zenuity_Debug_VruCollisionAvoidanceDiagnostics_minorVersion                      0U

/* Encoding / decoding functions
 * Returns true on success, false on any failure.
 * Notes on Decode:
 * User is expected to provide a struct with wanted/default values (all zeroes).
 * A case where default values are not wanted is if you want to merge two messages
 * i.e. update only the fields that exist in the new message.
 * Note: These functions supports NULL termination of messages which most other
 *       protobuf implementations do not just so you know
 */
bool encode_Zenuity_Debug_AebGeneralStatusDiagnostic_Raw(qpb_ostream_t *const stream, const Zenuity_Debug_AebGeneralStatusDiagnostic_Raw *const data);
bool decode_Zenuity_Debug_AebGeneralStatusDiagnostic_Raw(qpb_istream_t *const stream, Zenuity_Debug_AebGeneralStatusDiagnostic_Raw *const data);
#define encode_Zenuity_Debug_AebGeneralStatusDiagnostic encode_Zenuity_Debug_AebGeneralStatusDiagnostic_Raw
#define decode_Zenuity_Debug_AebGeneralStatusDiagnostic decode_Zenuity_Debug_AebGeneralStatusDiagnostic_Raw

bool encode_Zenuity_Debug_AebInhibitionDiagnostic_Raw(qpb_ostream_t *const stream, const Zenuity_Debug_AebInhibitionDiagnostic_Raw *const data);
bool decode_Zenuity_Debug_AebInhibitionDiagnostic_Raw(qpb_istream_t *const stream, Zenuity_Debug_AebInhibitionDiagnostic_Raw *const data);
#define encode_Zenuity_Debug_AebInhibitionDiagnostic encode_Zenuity_Debug_AebInhibitionDiagnostic_Raw
#define decode_Zenuity_Debug_AebInhibitionDiagnostic decode_Zenuity_Debug_AebInhibitionDiagnostic_Raw

bool encode_Zenuity_Debug_AebPrimaryTarget_Raw(qpb_ostream_t *const stream, const Zenuity_Debug_AebPrimaryTarget_Raw *const data);
bool decode_Zenuity_Debug_AebPrimaryTarget_Raw(qpb_istream_t *const stream, Zenuity_Debug_AebPrimaryTarget_Raw *const data);
#define encode_Zenuity_Debug_AebPrimaryTarget encode_Zenuity_Debug_AebPrimaryTarget_Raw
#define decode_Zenuity_Debug_AebPrimaryTarget decode_Zenuity_Debug_AebPrimaryTarget_Raw

bool encode_Zenuity_Debug_BrakingDiagnostic_Raw(qpb_ostream_t *const stream, const Zenuity_Debug_BrakingDiagnostic_Raw *const data);
bool decode_Zenuity_Debug_BrakingDiagnostic_Raw(qpb_istream_t *const stream, Zenuity_Debug_BrakingDiagnostic_Raw *const data);
#define encode_Zenuity_Debug_BrakingDiagnostic encode_Zenuity_Debug_BrakingDiagnostic_Raw
#define decode_Zenuity_Debug_BrakingDiagnostic decode_Zenuity_Debug_BrakingDiagnostic_Raw

bool encode_Zenuity_Debug_BrakingGainInhibitConditionStatus_Raw(qpb_ostream_t *const stream, const Zenuity_Debug_BrakingGainInhibitConditionStatus_Raw *const data);
bool decode_Zenuity_Debug_BrakingGainInhibitConditionStatus_Raw(qpb_istream_t *const stream, Zenuity_Debug_BrakingGainInhibitConditionStatus_Raw *const data);
#define encode_Zenuity_Debug_BrakingGainInhibitConditionStatus encode_Zenuity_Debug_BrakingGainInhibitConditionStatus_Raw
#define decode_Zenuity_Debug_BrakingGainInhibitConditionStatus decode_Zenuity_Debug_BrakingGainInhibitConditionStatus_Raw

bool encode_Zenuity_Debug_CollisionWarningInhibitConditionStatus_Raw(qpb_ostream_t *const stream, const Zenuity_Debug_CollisionWarningInhibitConditionStatus_Raw *const data);
bool decode_Zenuity_Debug_CollisionWarningInhibitConditionStatus_Raw(qpb_istream_t *const stream, Zenuity_Debug_CollisionWarningInhibitConditionStatus_Raw *const data);
#define encode_Zenuity_Debug_CollisionWarningInhibitConditionStatus encode_Zenuity_Debug_CollisionWarningInhibitConditionStatus_Raw
#define decode_Zenuity_Debug_CollisionWarningInhibitConditionStatus decode_Zenuity_Debug_CollisionWarningInhibitConditionStatus_Raw

bool encode_Zenuity_Debug_CollisionWarningStartConditionStatus_Raw(qpb_ostream_t *const stream, const Zenuity_Debug_CollisionWarningStartConditionStatus_Raw *const data);
bool decode_Zenuity_Debug_CollisionWarningStartConditionStatus_Raw(qpb_istream_t *const stream, Zenuity_Debug_CollisionWarningStartConditionStatus_Raw *const data);
#define encode_Zenuity_Debug_CollisionWarningStartConditionStatus encode_Zenuity_Debug_CollisionWarningStartConditionStatus_Raw
#define decode_Zenuity_Debug_CollisionWarningStartConditionStatus decode_Zenuity_Debug_CollisionWarningStartConditionStatus_Raw

bool encode_Zenuity_Debug_EvasiveManoeuvreAssistDiagnostics_Raw(qpb_ostream_t *const stream, const Zenuity_Debug_EvasiveManoeuvreAssistDiagnostics_Raw *const data);
bool decode_Zenuity_Debug_EvasiveManoeuvreAssistDiagnostics_Raw(qpb_istream_t *const stream, Zenuity_Debug_EvasiveManoeuvreAssistDiagnostics_Raw *const data);
#define encode_Zenuity_Debug_EvasiveManoeuvreAssistDiagnostics encode_Zenuity_Debug_EvasiveManoeuvreAssistDiagnostics_Raw
#define decode_Zenuity_Debug_EvasiveManoeuvreAssistDiagnostics decode_Zenuity_Debug_EvasiveManoeuvreAssistDiagnostics_Raw

bool encode_Zenuity_Debug_HighestThreatInfo_Raw(qpb_ostream_t *const stream, const Zenuity_Debug_HighestThreatInfo_Raw *const data);
bool decode_Zenuity_Debug_HighestThreatInfo_Raw(qpb_istream_t *const stream, Zenuity_Debug_HighestThreatInfo_Raw *const data);
bool encode_Zenuity_Debug_HighestThreatInfo(qpb_ostream_t *const stream, const Zenuity_Debug_HighestThreatInfo *const data);
bool decode_Zenuity_Debug_HighestThreatInfo(qpb_istream_t *const stream, Zenuity_Debug_HighestThreatInfo *const data);

bool encode_Zenuity_Debug_ObjectManeuverOverlapsHostManeuver_Raw(qpb_ostream_t *const stream, const Zenuity_Debug_ObjectManeuverOverlapsHostManeuver_Raw *const data);
bool decode_Zenuity_Debug_ObjectManeuverOverlapsHostManeuver_Raw(qpb_istream_t *const stream, Zenuity_Debug_ObjectManeuverOverlapsHostManeuver_Raw *const data);
#define encode_Zenuity_Debug_ObjectManeuverOverlapsHostManeuver encode_Zenuity_Debug_ObjectManeuverOverlapsHostManeuver_Raw
#define decode_Zenuity_Debug_ObjectManeuverOverlapsHostManeuver decode_Zenuity_Debug_ObjectManeuverOverlapsHostManeuver_Raw

bool encode_Zenuity_Debug_ThreatAssessmentDiagnosticObject_Raw(qpb_ostream_t *const stream, const Zenuity_Debug_ThreatAssessmentDiagnosticObject_Raw *const data);
bool decode_Zenuity_Debug_ThreatAssessmentDiagnosticObject_Raw(qpb_istream_t *const stream, Zenuity_Debug_ThreatAssessmentDiagnosticObject_Raw *const data);
#define encode_Zenuity_Debug_ThreatAssessmentDiagnosticObject encode_Zenuity_Debug_ThreatAssessmentDiagnosticObject_Raw
#define decode_Zenuity_Debug_ThreatAssessmentDiagnosticObject decode_Zenuity_Debug_ThreatAssessmentDiagnosticObject_Raw

bool encode_Zenuity_Debug_ASILThreatAssesmentDiagnostics_Raw(qpb_ostream_t *const stream, const Zenuity_Debug_ASILThreatAssesmentDiagnostics_Raw *const data);
bool decode_Zenuity_Debug_ASILThreatAssesmentDiagnostics_Raw(qpb_istream_t *const stream, Zenuity_Debug_ASILThreatAssesmentDiagnostics_Raw *const data);
#define encode_Zenuity_Debug_ASILThreatAssesmentDiagnostics encode_Zenuity_Debug_ASILThreatAssesmentDiagnostics_Raw
#define decode_Zenuity_Debug_ASILThreatAssesmentDiagnostics decode_Zenuity_Debug_ASILThreatAssesmentDiagnostics_Raw

bool encode_Zenuity_Debug_AllBrakeDiagnostics_Raw(qpb_ostream_t *const stream, const Zenuity_Debug_AllBrakeDiagnostics_Raw *const data);
bool decode_Zenuity_Debug_AllBrakeDiagnostics_Raw(qpb_istream_t *const stream, Zenuity_Debug_AllBrakeDiagnostics_Raw *const data);
#define encode_Zenuity_Debug_AllBrakeDiagnostics encode_Zenuity_Debug_AllBrakeDiagnostics_Raw
#define decode_Zenuity_Debug_AllBrakeDiagnostics decode_Zenuity_Debug_AllBrakeDiagnostics_Raw

bool encode_Zenuity_Debug_CollisionWarningDiagnostics_Raw(qpb_ostream_t *const stream, const Zenuity_Debug_CollisionWarningDiagnostics_Raw *const data);
bool decode_Zenuity_Debug_CollisionWarningDiagnostics_Raw(qpb_istream_t *const stream, Zenuity_Debug_CollisionWarningDiagnostics_Raw *const data);
#define encode_Zenuity_Debug_CollisionWarningDiagnostics encode_Zenuity_Debug_CollisionWarningDiagnostics_Raw
#define decode_Zenuity_Debug_CollisionWarningDiagnostics decode_Zenuity_Debug_CollisionWarningDiagnostics_Raw

bool encode_Zenuity_Debug_ThreatAssessmentDiagnostics_Raw(qpb_ostream_t *const stream, const Zenuity_Debug_ThreatAssessmentDiagnostics_Raw *const data);
bool decode_Zenuity_Debug_ThreatAssessmentDiagnostics_Raw(qpb_istream_t *const stream, Zenuity_Debug_ThreatAssessmentDiagnostics_Raw *const data);
#define encode_Zenuity_Debug_ThreatAssessmentDiagnostics encode_Zenuity_Debug_ThreatAssessmentDiagnostics_Raw
#define decode_Zenuity_Debug_ThreatAssessmentDiagnostics decode_Zenuity_Debug_ThreatAssessmentDiagnostics_Raw

bool encode_Zenuity_Debug_VruCollisionAvoidanceDiagnostics_Raw(qpb_ostream_t *const stream, const Zenuity_Debug_VruCollisionAvoidanceDiagnostics_Raw *const data);
bool decode_Zenuity_Debug_VruCollisionAvoidanceDiagnostics_Raw(qpb_istream_t *const stream, Zenuity_Debug_VruCollisionAvoidanceDiagnostics_Raw *const data);
bool encode_Zenuity_Debug_VruCollisionAvoidanceDiagnostics(qpb_ostream_t *const stream, const Zenuity_Debug_VruCollisionAvoidanceDiagnostics *const data);
bool decode_Zenuity_Debug_VruCollisionAvoidanceDiagnostics(qpb_istream_t *const stream, Zenuity_Debug_VruCollisionAvoidanceDiagnostics *const data);

bool encode_Zenuity_Debug_AebDiagnostics_Raw(qpb_ostream_t *const stream, const Zenuity_Debug_AebDiagnostics_Raw *const data);
bool decode_Zenuity_Debug_AebDiagnostics_Raw(qpb_istream_t *const stream, Zenuity_Debug_AebDiagnostics_Raw *const data);
#define encode_Zenuity_Debug_AebDiagnostics encode_Zenuity_Debug_AebDiagnostics_Raw
#define decode_Zenuity_Debug_AebDiagnostics decode_Zenuity_Debug_AebDiagnostics_Raw

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif /* ZENUITY_DEBUG_CALONG_DEBUG_INCLUDED */
