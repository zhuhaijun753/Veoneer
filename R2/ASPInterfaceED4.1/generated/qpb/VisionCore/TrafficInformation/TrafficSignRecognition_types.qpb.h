/* Automatically generated qpb types header */
/* SPP version 2.0.0 */
/* Generated by Quick Protocol Buffers - 2 */

#ifndef VISIONCORE_TRAFFICINFORMATION_TRAFFICSIGNRECOGNITION_TYPES_INCLUDED
#define VISIONCORE_TRAFFICINFORMATION_TRAFFICSIGNRECOGNITION_TYPES_INCLUDED

#include "Tools/QuickProtobuf/qpb_types.h"

#include "VisionCore/Common/Coords_types.qpb.h"
#include "VisionCore/Common/Size_types.qpb.h"

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _VisionCore_TrafficInformation_SignCategory {
    VisionCore_TrafficInformation_SignCategory_None = 0,
    VisionCore_TrafficInformation_SignCategory_Speed = 1,
    VisionCore_TrafficInformation_SignCategory_Clearing = 2,
    VisionCore_TrafficInformation_SignCategory_Warning = 3,
    VisionCore_TrafficInformation_SignCategory_NoEntry = 4,
    VisionCore_TrafficInformation_SignCategory_Arrow = 5,
    VisionCore_TrafficInformation_SignCategory_RoadType = 6,
    VisionCore_TrafficInformation_SignCategory_Chicane = 7,
    VisionCore_TrafficInformation_SignCategory_LaneClosure = 8,
    VisionCore_TrafficInformation_SignCategory_Attention = 9
} VisionCore_TrafficInformation_SignCategory;
#define VisionCore_TrafficInformation_SignCategory_MIN VisionCore_TrafficInformation_SignCategory_None
#define VisionCore_TrafficInformation_SignCategory_MAX VisionCore_TrafficInformation_SignCategory_Attention
#define VisionCore_TrafficInformation_SignCategory_ARRAYSIZE ((VisionCore_TrafficInformation_SignCategory)(VisionCore_TrafficInformation_SignCategory_Attention+1))

typedef enum _VisionCore_TrafficInformation_SpeedLimitUnit {
    VisionCore_TrafficInformation_SpeedLimitUnit_None = 0,
    VisionCore_TrafficInformation_SpeedLimitUnit_Kph = 1,
    VisionCore_TrafficInformation_SpeedLimitUnit_Mph = 2
} VisionCore_TrafficInformation_SpeedLimitUnit;
#define VisionCore_TrafficInformation_SpeedLimitUnit_MIN VisionCore_TrafficInformation_SpeedLimitUnit_None
#define VisionCore_TrafficInformation_SpeedLimitUnit_MAX VisionCore_TrafficInformation_SpeedLimitUnit_Mph
#define VisionCore_TrafficInformation_SpeedLimitUnit_ARRAYSIZE ((VisionCore_TrafficInformation_SpeedLimitUnit)(VisionCore_TrafficInformation_SpeedLimitUnit_Mph+1))

typedef enum _VisionCore_TrafficInformation_SignClearing {
    VisionCore_TrafficInformation_SignClearing_None = 0,
    VisionCore_TrafficInformation_SignClearing_All = 1,
    VisionCore_TrafficInformation_SignClearing_Speed = 2,
    VisionCore_TrafficInformation_SignClearing_NoOvertakingForAll = 3,
    VisionCore_TrafficInformation_SignClearing_NoOvertakingForTrucks = 4
} VisionCore_TrafficInformation_SignClearing;
#define VisionCore_TrafficInformation_SignClearing_MIN VisionCore_TrafficInformation_SignClearing_None
#define VisionCore_TrafficInformation_SignClearing_MAX VisionCore_TrafficInformation_SignClearing_NoOvertakingForTrucks
#define VisionCore_TrafficInformation_SignClearing_ARRAYSIZE ((VisionCore_TrafficInformation_SignClearing)(VisionCore_TrafficInformation_SignClearing_NoOvertakingForTrucks+1))

typedef enum _VisionCore_TrafficInformation_SignWarning {
    VisionCore_TrafficInformation_SignWarning_None = 0,
    VisionCore_TrafficInformation_SignWarning_SlipperyRoad = 1,
    VisionCore_TrafficInformation_SignWarning_BendRight = 2,
    VisionCore_TrafficInformation_SignWarning_BendLeft = 3,
    VisionCore_TrafficInformation_SignWarning_DoubleBendFirstRight = 4,
    VisionCore_TrafficInformation_SignWarning_DoubleBendFirstLeft = 5,
    VisionCore_TrafficInformation_SignWarning_Ice = 6,
    VisionCore_TrafficInformation_SignWarning_DirtyRoad = 7,
    VisionCore_TrafficInformation_SignWarning_RoadNarrows = 8,
    VisionCore_TrafficInformation_SignWarning_RoadNarrowsRight = 9,
    VisionCore_TrafficInformation_SignWarning_RoadNarrowsLeft = 10,
    VisionCore_TrafficInformation_SignWarning_ConstructionSite = 11,
    VisionCore_TrafficInformation_SignWarning_ZebraCrossing = 12,
    VisionCore_TrafficInformation_SignWarning_School = 13,
    VisionCore_TrafficInformation_SignWarning_Train = 14,
    VisionCore_TrafficInformation_SignWarning_Roundabout = 15,
    VisionCore_TrafficInformation_SignWarning_GatedLevelCrossing = 16,
    VisionCore_TrafficInformation_SignWarning_Bump = 17,
    VisionCore_TrafficInformation_SignWarning_TrafficLights = 18,
    VisionCore_TrafficInformation_SignWarning_ConstructionText = 19,
    VisionCore_TrafficInformation_SignWarning_Pedestrian = 20,
    VisionCore_TrafficInformation_SignWarning_Bicycles = 21,
    VisionCore_TrafficInformation_SignWarning_Tram = 22,
    VisionCore_TrafficInformation_SignWarning_Congestion = 23,
    VisionCore_TrafficInformation_SignWarning_Wind = 24,
    VisionCore_TrafficInformation_SignWarning_Tunnel = 25,
    VisionCore_TrafficInformation_SignWarning_WildAnimals = 26,
    VisionCore_TrafficInformation_SignWarning_DomesticAnimals = 27,
    VisionCore_TrafficInformation_SignWarning_SteepHillDown = 28,
    VisionCore_TrafficInformation_SignWarning_SteepHillUp = 29,
    VisionCore_TrafficInformation_SignWarning_TwowayTrafficOncoming = 30,
    VisionCore_TrafficInformation_SignWarning_TwowayTrafficCrossing = 31,
    VisionCore_TrafficInformation_SignWarning_MergingLeft = 32,
    VisionCore_TrafficInformation_SignWarning_MergingRight = 33,
    VisionCore_TrafficInformation_SignWarning_RightHasRightofway = 34,
    VisionCore_TrafficInformation_SignWarning_PriorityCrossroad = 35,
    VisionCore_TrafficInformation_SignWarning_PriorityMinorLeft = 36,
    VisionCore_TrafficInformation_SignWarning_PriorityMinorRight = 37,
    VisionCore_TrafficInformation_SignWarning_Junction = 38,
    VisionCore_TrafficInformation_SignWarning_TJunctionLeft = 39,
    VisionCore_TrafficInformation_SignWarning_TJunctionRight = 40,
    VisionCore_TrafficInformation_SignWarning_General = 41,
    VisionCore_TrafficInformation_SignWarning_Rocks = 42,
    VisionCore_TrafficInformation_SignWarning_AirTraffic = 43,
    VisionCore_TrafficInformation_SignWarning_Other = 44
} VisionCore_TrafficInformation_SignWarning;
#define VisionCore_TrafficInformation_SignWarning_MIN VisionCore_TrafficInformation_SignWarning_None
#define VisionCore_TrafficInformation_SignWarning_MAX VisionCore_TrafficInformation_SignWarning_Other
#define VisionCore_TrafficInformation_SignWarning_ARRAYSIZE ((VisionCore_TrafficInformation_SignWarning)(VisionCore_TrafficInformation_SignWarning_Other+1))

typedef enum _VisionCore_TrafficInformation_SignNoEntry {
    VisionCore_TrafficInformation_SignNoEntry_None = 0,
    VisionCore_TrafficInformation_SignNoEntry_All = 1
} VisionCore_TrafficInformation_SignNoEntry;
#define VisionCore_TrafficInformation_SignNoEntry_MIN VisionCore_TrafficInformation_SignNoEntry_None
#define VisionCore_TrafficInformation_SignNoEntry_MAX VisionCore_TrafficInformation_SignNoEntry_All
#define VisionCore_TrafficInformation_SignNoEntry_ARRAYSIZE ((VisionCore_TrafficInformation_SignNoEntry)(VisionCore_TrafficInformation_SignNoEntry_All+1))

typedef enum _VisionCore_TrafficInformation_SignArrow {
    VisionCore_TrafficInformation_SignArrow_None = 0,
    VisionCore_TrafficInformation_SignArrow_KeepLeft = 1,
    VisionCore_TrafficInformation_SignArrow_KeepRight = 2,
    VisionCore_TrafficInformation_SignArrow_Roundabout = 3,
    VisionCore_TrafficInformation_SignArrow_OnlyStraight = 4,
    VisionCore_TrafficInformation_SignArrow_OnlyLeft = 5,
    VisionCore_TrafficInformation_SignArrow_OnlyRight = 6,
    VisionCore_TrafficInformation_SignArrow_OnlyStraightLeft = 7,
    VisionCore_TrafficInformation_SignArrow_OnlyStraightRight = 8
} VisionCore_TrafficInformation_SignArrow;
#define VisionCore_TrafficInformation_SignArrow_MIN VisionCore_TrafficInformation_SignArrow_None
#define VisionCore_TrafficInformation_SignArrow_MAX VisionCore_TrafficInformation_SignArrow_OnlyStraightRight
#define VisionCore_TrafficInformation_SignArrow_ARRAYSIZE ((VisionCore_TrafficInformation_SignArrow)(VisionCore_TrafficInformation_SignArrow_OnlyStraightRight+1))

typedef enum _VisionCore_TrafficInformation_SignRoadType {
    VisionCore_TrafficInformation_SignRoadType_None = 0,
    VisionCore_TrafficInformation_SignRoadType_LivingStreetBegin = 1,
    VisionCore_TrafficInformation_SignRoadType_LivingStreetEnd = 2,
    VisionCore_TrafficInformation_SignRoadType_MotorwayBegin = 3,
    VisionCore_TrafficInformation_SignRoadType_MotorwayEnd = 4,
    VisionCore_TrafficInformation_SignRoadType_LimitedAccessRoadBegin = 5,
    VisionCore_TrafficInformation_SignRoadType_LimitedAccessRoadEnd = 6,
    VisionCore_TrafficInformation_SignRoadType_CitylimitBegin = 7,
    VisionCore_TrafficInformation_SignRoadType_CitylimitEnd = 8,
    VisionCore_TrafficInformation_SignRoadType_TollBegin = 9,
    VisionCore_TrafficInformation_SignRoadType_TollEnd = 10
} VisionCore_TrafficInformation_SignRoadType;
#define VisionCore_TrafficInformation_SignRoadType_MIN VisionCore_TrafficInformation_SignRoadType_None
#define VisionCore_TrafficInformation_SignRoadType_MAX VisionCore_TrafficInformation_SignRoadType_TollEnd
#define VisionCore_TrafficInformation_SignRoadType_ARRAYSIZE ((VisionCore_TrafficInformation_SignRoadType)(VisionCore_TrafficInformation_SignRoadType_TollEnd+1))

typedef enum _VisionCore_TrafficInformation_SignChicane {
    VisionCore_TrafficInformation_SignChicane_None = 0,
    VisionCore_TrafficInformation_SignChicane_Left = 1,
    VisionCore_TrafficInformation_SignChicane_Right = 2,
    VisionCore_TrafficInformation_SignChicane_Misc = 3,
    VisionCore_TrafficInformation_SignChicane_ClosureLeft = 4,
    VisionCore_TrafficInformation_SignChicane_ClosureRight = 5,
    VisionCore_TrafficInformation_SignChicane_ShoulderOpened = 6,
    VisionCore_TrafficInformation_SignChicane_ShoulderClosed = 7,
    VisionCore_TrafficInformation_SignChicane_AnnouncementOncomingTraffic = 8
} VisionCore_TrafficInformation_SignChicane;
#define VisionCore_TrafficInformation_SignChicane_MIN VisionCore_TrafficInformation_SignChicane_None
#define VisionCore_TrafficInformation_SignChicane_MAX VisionCore_TrafficInformation_SignChicane_AnnouncementOncomingTraffic
#define VisionCore_TrafficInformation_SignChicane_ARRAYSIZE ((VisionCore_TrafficInformation_SignChicane)(VisionCore_TrafficInformation_SignChicane_AnnouncementOncomingTraffic+1))

typedef enum _VisionCore_TrafficInformation_SignLaneClosure {
    VisionCore_TrafficInformation_SignLaneClosure_None = 0,
    VisionCore_TrafficInformation_SignLaneClosure_Closed = 1,
    VisionCore_TrafficInformation_SignLaneClosure_Opened = 2,
    VisionCore_TrafficInformation_SignLaneClosure_ChangeLeft = 3,
    VisionCore_TrafficInformation_SignLaneClosure_ChangeRight = 4
} VisionCore_TrafficInformation_SignLaneClosure;
#define VisionCore_TrafficInformation_SignLaneClosure_MIN VisionCore_TrafficInformation_SignLaneClosure_None
#define VisionCore_TrafficInformation_SignLaneClosure_MAX VisionCore_TrafficInformation_SignLaneClosure_ChangeRight
#define VisionCore_TrafficInformation_SignLaneClosure_ARRAYSIZE ((VisionCore_TrafficInformation_SignLaneClosure)(VisionCore_TrafficInformation_SignLaneClosure_ChangeRight+1))

typedef enum _VisionCore_TrafficInformation_SignAttention {
    VisionCore_TrafficInformation_SignAttention_None = 0,
    VisionCore_TrafficInformation_SignAttention_NoOvertakingForAll = 1,
    VisionCore_TrafficInformation_SignAttention_NoOvertakingForTrucks = 2,
    VisionCore_TrafficInformation_SignAttention_Crosswalk = 3,
    VisionCore_TrafficInformation_SignAttention_Stop = 4,
    VisionCore_TrafficInformation_SignAttention_Yield = 5
} VisionCore_TrafficInformation_SignAttention;
#define VisionCore_TrafficInformation_SignAttention_MIN VisionCore_TrafficInformation_SignAttention_None
#define VisionCore_TrafficInformation_SignAttention_MAX VisionCore_TrafficInformation_SignAttention_Yield
#define VisionCore_TrafficInformation_SignAttention_ARRAYSIZE ((VisionCore_TrafficInformation_SignAttention)(VisionCore_TrafficInformation_SignAttention_Yield+1))

typedef enum _VisionCore_TrafficInformation_RestrictionSign {
    VisionCore_TrafficInformation_RestrictionSign_None = 0,
    VisionCore_TrafficInformation_RestrictionSign_Unknown = 1,
    VisionCore_TrafficInformation_RestrictionSign_Left = 2,
    VisionCore_TrafficInformation_RestrictionSign_Right = 3,
    VisionCore_TrafficInformation_RestrictionSign_WetConditions = 4,
    VisionCore_TrafficInformation_RestrictionSign_BlackIce = 5,
    VisionCore_TrafficInformation_RestrictionSign_Fog = 6,
    VisionCore_TrafficInformation_RestrictionSign_Time = 7,
    VisionCore_TrafficInformation_RestrictionSign_StartDistance = 8,
    VisionCore_TrafficInformation_RestrictionSign_EndDistance = 9,
    VisionCore_TrafficInformation_RestrictionSign_Weight = 10,
    VisionCore_TrafficInformation_RestrictionSign_Weight35t = 11,
    VisionCore_TrafficInformation_RestrictionSign_Weight75t = 12,
    VisionCore_TrafficInformation_RestrictionSign_End = 13,
    VisionCore_TrafficInformation_RestrictionSign_Bicycle = 14,
    VisionCore_TrafficInformation_RestrictionSign_Motorcycle = 15,
    VisionCore_TrafficInformation_RestrictionSign_Car = 16,
    VisionCore_TrafficInformation_RestrictionSign_Truck = 17,
    VisionCore_TrafficInformation_RestrictionSign_Trailer = 19,
    VisionCore_TrafficInformation_RestrictionSign_Bus = 20,
    VisionCore_TrafficInformation_RestrictionSign_Tractor = 21,
    VisionCore_TrafficInformation_RestrictionSign_HazardousMaterial = 22,
    VisionCore_TrafficInformation_RestrictionSign_TruckTrailer = 23,
    VisionCore_TrafficInformation_RestrictionSign_TruckBus = 24,
    VisionCore_TrafficInformation_RestrictionSign_TruckBusTrailer = 25,
    VisionCore_TrafficInformation_RestrictionSign_RampExit = 26,
    VisionCore_TrafficInformation_RestrictionSign_Ahead = 27,
    VisionCore_TrafficInformation_RestrictionSign_WhenFlashing = 28,
    VisionCore_TrafficInformation_RestrictionSign_ChildrenPresent = 29,
    VisionCore_TrafficInformation_RestrictionSign_Night = 30,
    VisionCore_TrafficInformation_RestrictionSign_IcyOrWet = 31,
    VisionCore_TrafficInformation_RestrictionSign_Begin = 32,
    VisionCore_TrafficInformation_RestrictionSign_School = 33,
    VisionCore_TrafficInformation_RestrictionSign_Zone = 34,
    VisionCore_TrafficInformation_RestrictionSign_TruckNight = 35,
    VisionCore_TrafficInformation_RestrictionSign_AllWay = 36,
    VisionCore_TrafficInformation_RestrictionSign_WorkZone = 37,
    VisionCore_TrafficInformation_RestrictionSign_ShoulderUseAsLane = 38,
    VisionCore_TrafficInformation_RestrictionSign_ShoulderDontUseAsLane = 39
} VisionCore_TrafficInformation_RestrictionSign;
#define VisionCore_TrafficInformation_RestrictionSign_MIN VisionCore_TrafficInformation_RestrictionSign_None
#define VisionCore_TrafficInformation_RestrictionSign_MAX VisionCore_TrafficInformation_RestrictionSign_ShoulderDontUseAsLane
#define VisionCore_TrafficInformation_RestrictionSign_ARRAYSIZE ((VisionCore_TrafficInformation_RestrictionSign)(VisionCore_TrafficInformation_RestrictionSign_ShoulderDontUseAsLane+1))

typedef enum _VisionCore_TrafficInformation_PhysicalSignType {
    VisionCore_TrafficInformation_PhysicalSignType_Standard = 0,
    VisionCore_TrafficInformation_PhysicalSignType_Led = 1
} VisionCore_TrafficInformation_PhysicalSignType;
#define VisionCore_TrafficInformation_PhysicalSignType_MIN VisionCore_TrafficInformation_PhysicalSignType_Standard
#define VisionCore_TrafficInformation_PhysicalSignType_MAX VisionCore_TrafficInformation_PhysicalSignType_Led
#define VisionCore_TrafficInformation_PhysicalSignType_ARRAYSIZE ((VisionCore_TrafficInformation_PhysicalSignType)(VisionCore_TrafficInformation_PhysicalSignType_Led+1))

typedef enum _VisionCore_TrafficInformation_BindingOfSpeed {
    VisionCore_TrafficInformation_BindingOfSpeed_None = 0,
    VisionCore_TrafficInformation_BindingOfSpeed_MaximumSpeed = 1,
    VisionCore_TrafficInformation_BindingOfSpeed_RecommendedSpeed = 2,
    VisionCore_TrafficInformation_BindingOfSpeed_MinimumSpeed = 3
} VisionCore_TrafficInformation_BindingOfSpeed;
#define VisionCore_TrafficInformation_BindingOfSpeed_MIN VisionCore_TrafficInformation_BindingOfSpeed_None
#define VisionCore_TrafficInformation_BindingOfSpeed_MAX VisionCore_TrafficInformation_BindingOfSpeed_MinimumSpeed
#define VisionCore_TrafficInformation_BindingOfSpeed_ARRAYSIZE ((VisionCore_TrafficInformation_BindingOfSpeed)(VisionCore_TrafficInformation_BindingOfSpeed_MinimumSpeed+1))

typedef enum _VisionCore_TrafficInformation_TsrAvailability {
    VisionCore_TrafficInformation_TsrAvailability_NotAvailable = 0,
    VisionCore_TrafficInformation_TsrAvailability_Available = 1
} VisionCore_TrafficInformation_TsrAvailability;
#define VisionCore_TrafficInformation_TsrAvailability_MIN VisionCore_TrafficInformation_TsrAvailability_NotAvailable
#define VisionCore_TrafficInformation_TsrAvailability_MAX VisionCore_TrafficInformation_TsrAvailability_Available
#define VisionCore_TrafficInformation_TsrAvailability_ARRAYSIZE ((VisionCore_TrafficInformation_TsrAvailability)(VisionCore_TrafficInformation_TsrAvailability_Available+1))

typedef enum _VisionCore_TrafficInformation_TsrInputError {
    VisionCore_TrafficInformation_TsrInputError_NoError = 0,
    VisionCore_TrafficInformation_TsrInputError_Blockage = 1,
    VisionCore_TrafficInformation_TsrInputError_UnsupportedCountry = 2,
    VisionCore_TrafficInformation_TsrInputError_BlockageAndUnsupportedCountry = 3,
    VisionCore_TrafficInformation_TsrInputError_EgoMotionNotAvailable = 4,
    VisionCore_TrafficInformation_TsrInputError_BlockageAndEgoMotionNotAvailable = 5,
    VisionCore_TrafficInformation_TsrInputError_UnsupportedCountryAndEgoMotionNotAvailable = 6,
    VisionCore_TrafficInformation_TsrInputError_BlockageAndUnsupportedCountryAndEgoMotionNotAvailable = 7
} VisionCore_TrafficInformation_TsrInputError;
#define VisionCore_TrafficInformation_TsrInputError_MIN VisionCore_TrafficInformation_TsrInputError_NoError
#define VisionCore_TrafficInformation_TsrInputError_MAX VisionCore_TrafficInformation_TsrInputError_BlockageAndUnsupportedCountryAndEgoMotionNotAvailable
#define VisionCore_TrafficInformation_TsrInputError_ARRAYSIZE ((VisionCore_TrafficInformation_TsrInputError)(VisionCore_TrafficInformation_TsrInputError_BlockageAndUnsupportedCountryAndEgoMotionNotAvailable+1))

/* Struct definitions */
typedef struct _VisionCore_TrafficInformation_AddOnSign_Raw {
    /** Type
     * Describes the type of add on sign
     */
    VisionCore_TrafficInformation_RestrictionSign type;
    /** Confidence
     * Confidence value
     * Unit: %
     * Min: 0
     * Max: 100
     */
    uint8_t confidence;
} VisionCore_TrafficInformation_AddOnSign_Raw;

#define VisionCore_TrafficInformation_AddOnSign VisionCore_TrafficInformation_AddOnSign_Raw

typedef struct _VisionCore_TrafficInformation_Sign_Raw {
    /** Category
     * Describes category of the sign and which corresponding fields that shall be used
     */
    VisionCore_TrafficInformation_SignCategory category;
    /** SpeedLimit
     * Describes the detected speed limit, valid if category is SPEED. 255 = Unlimited.
     * Min: 0
     * Max: 255
     */
    uint8_t speedLimit;
    /** SpeedLimitUnit
     * Describes the unit of the detected speed limit, valid if category is SPEED.
     */
    VisionCore_TrafficInformation_SpeedLimitUnit speedLimitUnit;
    /** BindingOfSpeed
     * Describes how the speed sign should be interpreted, valid if category is SPEED.
     */
    VisionCore_TrafficInformation_BindingOfSpeed bindingOfSpeed;
    /** Clearing
     * Describes the clearing type, valid if category is CLEARING.
     */
    VisionCore_TrafficInformation_SignClearing clearing;
    /** Warning
     * Describes the warning, valid if category is WARNING.
     */
    VisionCore_TrafficInformation_SignWarning warning;
    /** NoEntry
     * Describes the type of no entry restriction, valid if category is NO_ENTRY.
     */
    VisionCore_TrafficInformation_SignNoEntry noEntry;
    /** Arrow
     * Describes the arrow type, valid if category is ARROW.
     */
    VisionCore_TrafficInformation_SignArrow arrow;
    /** RoadType
     * Describes start or end of a road type, valid if category is ROAD_TYPE.
     */
    VisionCore_TrafficInformation_SignRoadType roadType;
    /** Chicane
     * Describes the detected chicane type, valid if category is CHICANE.
     */
    VisionCore_TrafficInformation_SignChicane chicane;
    /** LaneClosure
     * Describes the detected lane closure, valid if category is LANE_CLOSURE.
     */
    VisionCore_TrafficInformation_SignLaneClosure laneClosure;
    /** Attention
     * Describes the detected attention sign, valid if category is ATTENTION.
     */
    VisionCore_TrafficInformation_SignAttention attention;
    /** Confidence
     * Confidence value
     * Unit: %
     * Min: 0
     * Max: 100
     */
    uint8_t confidence;
} VisionCore_TrafficInformation_Sign_Raw;

#define VisionCore_TrafficInformation_Sign VisionCore_TrafficInformation_Sign_Raw

typedef struct _VisionCore_TrafficInformation_StateInfo_Raw {
    /** Availability
     * Availability of TSR
     */
    VisionCore_TrafficInformation_TsrAvailability availability;
    /** InputError
     * Input error of TSR
     */
    VisionCore_TrafficInformation_TsrInputError inputError;
} VisionCore_TrafficInformation_StateInfo_Raw;

#define VisionCore_TrafficInformation_StateInfo VisionCore_TrafficInformation_StateInfo_Raw

typedef struct _VisionCore_TrafficInformation_ValidatedSign_Raw {
    /** Id
     * Unique sign id (should be unique until restart). 0 = Invalid.
     * Min: 0
     * Max: 4.29497e+09
     */
    uint32_t id;
    /** MainSign
     * Type of main sign
     */
    VisionCore_TrafficInformation_Sign_Raw mainSign;
    qpb_size_t addons_count;
    /** Addons
     * Add on signs to describe additions to the main sign
     */
    VisionCore_TrafficInformation_AddOnSign_Raw addons[2];
    /** ConstructionType
     * The physical type of main sign
     */
    VisionCore_TrafficInformation_PhysicalSignType constructionType;
    /** Position
     * 3D position of main sign (center)
     */
    VisionCore_Common_Coord3_m_0_01_Raw position;
    /** Size
     * 2D size of main sign
     */
    VisionCore_Common_Size2_m_0_01_Raw size;
    /** Valid
     * Sign was validated as valid (overall result)
     */
    bool valid;
} VisionCore_TrafficInformation_ValidatedSign_Raw;

typedef struct _VisionCore_TrafficInformation_ValidatedSign {
    /** Id
     * Unique sign id (should be unique until restart). 0 = Invalid.
     * Min: 0
     * Max: 4.29497e+09
     */
    uint32_t id;
    /** MainSign
     * Type of main sign
     */
    VisionCore_TrafficInformation_Sign mainSign;
    qpb_size_t addons_count;
    /** Addons
     * Add on signs to describe additions to the main sign
     */
    VisionCore_TrafficInformation_AddOnSign addons[2];
    /** ConstructionType
     * The physical type of main sign
     */
    VisionCore_TrafficInformation_PhysicalSignType constructionType;
    /** Position
     * 3D position of main sign (center)
     */
    VisionCore_Common_Coord3_m_0_01 position;
    /** Size
     * 2D size of main sign
     */
    VisionCore_Common_Size2_m_0_01 size;
    /** Valid
     * Sign was validated as valid (overall result)
     */
    bool valid;
} VisionCore_TrafficInformation_ValidatedSign;

typedef struct _VisionCore_TrafficInformation_ValidatedSignList_Raw {
    /** Status
     * Describes the current Traffic Sign Recognition status
     */
    VisionCore_TrafficInformation_StateInfo_Raw status;
    qpb_size_t signs_count;
    /** Signs
     * All detected signs
     */
    VisionCore_TrafficInformation_ValidatedSign_Raw signs[16];
} VisionCore_TrafficInformation_ValidatedSignList_Raw;

typedef struct _VisionCore_TrafficInformation_ValidatedSignList {
    /** Status
     * Describes the current Traffic Sign Recognition status
     */
    VisionCore_TrafficInformation_StateInfo status;
    qpb_size_t signs_count;
    /** Signs
     * All detected signs
     */
    VisionCore_TrafficInformation_ValidatedSign signs[16];
} VisionCore_TrafficInformation_ValidatedSignList;

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif /* VISIONCORE_TRAFFICINFORMATION_TRAFFICSIGNRECOGNITION_TYPES_INCLUDED */
