/* Automatically generated qpb header */
/* SPP version 2.0.0 */
/* Generated by Quick Protocol Buffers - 2 */

#ifndef VISIONCORE_ROAD_ROADBOUNDARY_INCLUDED
#define VISIONCORE_ROAD_ROADBOUNDARY_INCLUDED

#include "VisionCore/Road/RoadBoundary_types.qpb.h"


#include "Tools/QuickProtobuf/qpb.h"

#if QPB_PROTO_HEADER_VERSION != 2
#error Regenerate this file with the current version of qpb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Maximum encoded size of messages (where known) */
#define VisionCore_Road_RoadBoundaryClothoid_size                                        (16)
#define VisionCore_Road_RoadBoundaryClothoidVariance_size                                (16)
#define VisionCore_Road_RoadBoundaryTrack_size                                           ((23 + VisionCore_Road_RoadBoundaryClothoid_size + VisionCore_Road_RoadBoundaryClothoidVariance_size) + QPB_VARINT_MAX_ENCODED_SIZE)
#define VisionCore_Road_RoadBoundary_size                                                ((8 + VisionCore_Road_RoadBoundaryTrack_size + VisionCore_Road_RoadBoundaryTrack_size + VisionCore_Road_RoadBoundaryTrack_size + VisionCore_Road_RoadBoundaryTrack_size) + QPB_VARINT_MAX_ENCODED_SIZE)

/* Message IDs (where set with "identifier" option) */
#define VisionCore_Road_RoadBoundary_source                                              2U
#define VisionCore_Road_RoadBoundary_identifier                                          203U
#define VisionCore_Road_RoadBoundary_majorVersion                                        1U
#define VisionCore_Road_RoadBoundary_minorVersion                                        0U

/* Encoding / decoding functions
 * Returns true on success, false on any failure.
 * Notes on Decode:
 * User is expected to provide a struct with wanted/default values (all zeroes).
 * A case where default values are not wanted is if you want to merge two messages
 * i.e. update only the fields that exist in the new message.
 * Note: These functions supports NULL termination of messages which most other
 *       protobuf implementations do not just so you know
 */
bool encode_VisionCore_Road_RoadBoundaryClothoid_Raw(qpb_ostream_t *const stream, const VisionCore_Road_RoadBoundaryClothoid_Raw *const data);
bool decode_VisionCore_Road_RoadBoundaryClothoid_Raw(qpb_istream_t *const stream, VisionCore_Road_RoadBoundaryClothoid_Raw *const data);
bool encode_VisionCore_Road_RoadBoundaryClothoid(qpb_ostream_t *const stream, const VisionCore_Road_RoadBoundaryClothoid *const data);
bool decode_VisionCore_Road_RoadBoundaryClothoid(qpb_istream_t *const stream, VisionCore_Road_RoadBoundaryClothoid *const data);

bool encode_VisionCore_Road_RoadBoundaryClothoidVariance_Raw(qpb_ostream_t *const stream, const VisionCore_Road_RoadBoundaryClothoidVariance_Raw *const data);
bool decode_VisionCore_Road_RoadBoundaryClothoidVariance_Raw(qpb_istream_t *const stream, VisionCore_Road_RoadBoundaryClothoidVariance_Raw *const data);
bool encode_VisionCore_Road_RoadBoundaryClothoidVariance(qpb_ostream_t *const stream, const VisionCore_Road_RoadBoundaryClothoidVariance *const data);
bool decode_VisionCore_Road_RoadBoundaryClothoidVariance(qpb_istream_t *const stream, VisionCore_Road_RoadBoundaryClothoidVariance *const data);

bool encode_VisionCore_Road_RoadBoundaryTrack_Raw(qpb_ostream_t *const stream, const VisionCore_Road_RoadBoundaryTrack_Raw *const data);
bool decode_VisionCore_Road_RoadBoundaryTrack_Raw(qpb_istream_t *const stream, VisionCore_Road_RoadBoundaryTrack_Raw *const data);
bool encode_VisionCore_Road_RoadBoundaryTrack(qpb_ostream_t *const stream, const VisionCore_Road_RoadBoundaryTrack *const data);
bool decode_VisionCore_Road_RoadBoundaryTrack(qpb_istream_t *const stream, VisionCore_Road_RoadBoundaryTrack *const data);

bool encode_VisionCore_Road_RoadBoundary_Raw(qpb_ostream_t *const stream, const VisionCore_Road_RoadBoundary_Raw *const data);
bool decode_VisionCore_Road_RoadBoundary_Raw(qpb_istream_t *const stream, VisionCore_Road_RoadBoundary_Raw *const data);
bool encode_VisionCore_Road_RoadBoundary(qpb_ostream_t *const stream, const VisionCore_Road_RoadBoundary *const data);
bool decode_VisionCore_Road_RoadBoundary(qpb_istream_t *const stream, VisionCore_Road_RoadBoundary *const data);

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif /* VISIONCORE_ROAD_ROADBOUNDARY_INCLUDED */
