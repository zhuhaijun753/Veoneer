/* Automatically generated qpb header */
/* SPP version 2.0.0 */
/* Generated by Quick Protocol Buffers - 2 */

#ifndef SYSTEMCORE_COMMON_VEHICLEINPUT_INCLUDED
#define SYSTEMCORE_COMMON_VEHICLEINPUT_INCLUDED

#include "SystemCore/Common/VehicleInput_types.qpb.h"


#include "Tools/QuickProtobuf/qpb.h"

#if QPB_PROTO_HEADER_VERSION != 2
#error Regenerate this file with the current version of qpb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Maximum encoded size of messages (where known) */
#define SystemCore_Common_AcceleratorPedal_size                                          (5)
#define SystemCore_Common_BrakeSystem_size                                               (8)
#define SystemCore_Common_FrontWheel_size                                                (14)
#define SystemCore_Common_SafePositionsFrontSeats_size                                   (4)
#define SystemCore_Common_SteeringWheel_size                                             (22)
#define SystemCore_Common_VehicleInput_size                                              ((14 + SystemCore_Common_AcceleratorPedal_size + SystemCore_Common_BrakeSystem_size + SystemCore_Common_SteeringWheel_size + SystemCore_Common_FrontWheel_size + SystemCore_Common_SafePositionsFrontSeats_size) + QPB_VARINT_MAX_ENCODED_SIZE)

/* Message IDs (where set with "identifier" option) */
#define SystemCore_Common_VehicleInput_source                                            3U
#define SystemCore_Common_VehicleInput_identifier                                        1U
#define SystemCore_Common_VehicleInput_majorVersion                                      3U
#define SystemCore_Common_VehicleInput_minorVersion                                      1U

/* Encoding / decoding functions
 * Returns true on success, false on any failure.
 * Notes on Decode:
 * User is expected to provide a struct with wanted/default values (all zeroes).
 * A case where default values are not wanted is if you want to merge two messages
 * i.e. update only the fields that exist in the new message.
 * Note: These functions supports NULL termination of messages which most other
 *       protobuf implementations do not just so you know
 */
bool encode_SystemCore_Common_AcceleratorPedal_Raw(qpb_ostream_t *const stream, const SystemCore_Common_AcceleratorPedal_Raw *const data);
bool decode_SystemCore_Common_AcceleratorPedal_Raw(qpb_istream_t *const stream, SystemCore_Common_AcceleratorPedal_Raw *const data);
#define encode_SystemCore_Common_AcceleratorPedal encode_SystemCore_Common_AcceleratorPedal_Raw
#define decode_SystemCore_Common_AcceleratorPedal decode_SystemCore_Common_AcceleratorPedal_Raw

bool encode_SystemCore_Common_BrakeSystem_Raw(qpb_ostream_t *const stream, const SystemCore_Common_BrakeSystem_Raw *const data);
bool decode_SystemCore_Common_BrakeSystem_Raw(qpb_istream_t *const stream, SystemCore_Common_BrakeSystem_Raw *const data);
bool encode_SystemCore_Common_BrakeSystem(qpb_ostream_t *const stream, const SystemCore_Common_BrakeSystem *const data);
bool decode_SystemCore_Common_BrakeSystem(qpb_istream_t *const stream, SystemCore_Common_BrakeSystem *const data);

bool encode_SystemCore_Common_FrontWheel_Raw(qpb_ostream_t *const stream, const SystemCore_Common_FrontWheel_Raw *const data);
bool decode_SystemCore_Common_FrontWheel_Raw(qpb_istream_t *const stream, SystemCore_Common_FrontWheel_Raw *const data);
bool encode_SystemCore_Common_FrontWheel(qpb_ostream_t *const stream, const SystemCore_Common_FrontWheel *const data);
bool decode_SystemCore_Common_FrontWheel(qpb_istream_t *const stream, SystemCore_Common_FrontWheel *const data);

bool encode_SystemCore_Common_SafePositionsFrontSeats_Raw(qpb_ostream_t *const stream, const SystemCore_Common_SafePositionsFrontSeats_Raw *const data);
bool decode_SystemCore_Common_SafePositionsFrontSeats_Raw(qpb_istream_t *const stream, SystemCore_Common_SafePositionsFrontSeats_Raw *const data);
#define encode_SystemCore_Common_SafePositionsFrontSeats encode_SystemCore_Common_SafePositionsFrontSeats_Raw
#define decode_SystemCore_Common_SafePositionsFrontSeats decode_SystemCore_Common_SafePositionsFrontSeats_Raw

bool encode_SystemCore_Common_SteeringWheel_Raw(qpb_ostream_t *const stream, const SystemCore_Common_SteeringWheel_Raw *const data);
bool decode_SystemCore_Common_SteeringWheel_Raw(qpb_istream_t *const stream, SystemCore_Common_SteeringWheel_Raw *const data);
bool encode_SystemCore_Common_SteeringWheel(qpb_ostream_t *const stream, const SystemCore_Common_SteeringWheel *const data);
bool decode_SystemCore_Common_SteeringWheel(qpb_istream_t *const stream, SystemCore_Common_SteeringWheel *const data);

bool encode_SystemCore_Common_VehicleInput_Raw(qpb_ostream_t *const stream, const SystemCore_Common_VehicleInput_Raw *const data);
bool decode_SystemCore_Common_VehicleInput_Raw(qpb_istream_t *const stream, SystemCore_Common_VehicleInput_Raw *const data);
bool encode_SystemCore_Common_VehicleInput(qpb_ostream_t *const stream, const SystemCore_Common_VehicleInput *const data);
bool decode_SystemCore_Common_VehicleInput(qpb_istream_t *const stream, SystemCore_Common_VehicleInput *const data);

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif /* SYSTEMCORE_COMMON_VEHICLEINPUT_INCLUDED */
