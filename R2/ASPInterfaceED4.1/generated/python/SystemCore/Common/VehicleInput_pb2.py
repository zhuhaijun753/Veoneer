# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: SystemCore/Common/VehicleInput.proto

from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from Tools.Extension import SystemOptions_pb2 as Tools_dot_Extension_dot_SystemOptions__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='SystemCore/Common/VehicleInput.proto',
  package='SystemCore.Common',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n$SystemCore/Common/VehicleInput.proto\x12\x11SystemCore.Common\x1a#Tools/Extension/SystemOptions.proto\"\xdf\x01\n\x10\x41\x63\x63\x65leratorPedal\x12Y\n\x05valid\x18\x01 \x01(\x08\x42J\x92\xb5\x18\x46*DIndicates that the information contained in this message can be used\x12p\n\x0epressed_amount\x18\x02 \x01(\rBX\x92\xb5\x18\x02\x08\x08\x92\xb5\x18\tQ\x00\x00\x00\x00\x00\x00Y@\x92\xb5\x18\x03\"\x01%\x92\xb5\x18:*8Percentage describing the state of the accelerator pedal\"\xef\x02\n\x0b\x42rakeSystem\x12Y\n\x05valid\x18\x01 \x01(\x08\x42J\x92\xb5\x18\x46*DIndicates that the information contained in this message can be used\x12]\n\x11\x62rake_pedal_state\x18\x02 \x01(\x0e\x32\".SystemCore.Common.BrakePedalStateB\x1e\x92\xb5\x18\x1a*\x18State of the brake pedal\x12\xa5\x01\n\x14\x64\x65\x63\x65leration_request\x18\x03 \x01(\rB\x86\x01\x92\xb5\x18\x02\x08\x10\x92\xb5\x18\x06\x32\x04\x30.01\x92\xb5\x18\tQ\x00\x00\x00\x00\x00\x00\x39@\x92\xb5\x18\x07\"\x05m/s\xc2\xb2\x92\xb5\x18Z*XRequested deceleration by driver, positive since it is deceleration and not acceleration\"\x8f\x05\n\rSteeringWheel\x12Y\n\x05valid\x18\x01 \x01(\x08\x42J\x92\xb5\x18\x46*DIndicates that the information contained in this message can be used\x12s\n\x07limited\x18\x02 \x01(\x0e\x32).SystemCore.Common.AngleControlLimitStateB7\x92\xb5\x18\x33*1If the function output on the steering is limited\x12s\n\x06torque\x18\x03 \x01(\x11\x42\x63\x92\xb5\x18\x06\x32\x04\x30.01\x92\xb5\x18\tI\x00\x00\x00\x00\x00\x00>\xc0\x92\xb5\x18\tQ\x00\x00\x00\x00\x00\x00>@\x92\xb5\x18\x04\"\x02Nm\x92\xb5\x18\x33*1The steering wheel torque performed by the driver\x12\x86\x01\n\x17\x66unction_applied_torque\x18\x04 \x01(\x11\x42\x65\x92\xb5\x18\x06\x32\x04\x30.01\x92\xb5\x18\tI\x00\x00\x00\x00\x00\x00>\xc0\x92\xb5\x18\tQ\x00\x00\x00\x00\x00\x00>@\x92\xb5\x18\x04\"\x02Nm\x92\xb5\x18\x35*3The steering wheel torque performed by the function\x12\xaf\x01\n\x14total_applied_torque\x18\x05 \x01(\x11\x42\x90\x01\x92\xb5\x18\x06\x32\x04\x30.01\x92\xb5\x18\tI\x00\x00\x00\x00\x00\x00>\xc0\x92\xb5\x18\tQ\x00\x00\x00\x00\x00\x00>@\x92\xb5\x18\x04\"\x02Nm\x92\xb5\x18`*^The total torque performed by electric power assisted steering, defined at the steering wheel.\"\xbf\x02\n\nFrontWheel\x12Y\n\x05valid\x18\x01 \x01(\x08\x42J\x92\xb5\x18\x46*DIndicates that the information contained in this message can be used\x12\x64\n\x05\x61ngle\x18\x02 \x01(\x11\x42U\x92\xb5\x18\x08\x32\x06\x30.0001\x92\xb5\x18\tI\x00\x00\x00\x00\x00\x00\xf8\xbf\x92\xb5\x18\tQ\x00\x00\x00\x00\x00\x00\xf8?\x92\xb5\x18\x05\"\x03rad\x92\xb5\x18\"* The front wheel angle of the car\x12p\n\nangle_rate\x18\x04 \x01(\x11\x42\\\x92\xb5\x18\x08\x32\x06\x30.0001\x92\xb5\x18\tI\x00\x00\x00\x00\x00\x00\xf8\xbf\x92\xb5\x18\tQ\x00\x00\x00\x00\x00\x00\xf8?\x92\xb5\x18\x07\"\x05rad/s\x92\xb5\x18\'*%The front wheel angle rate of the car\"\xd3\x01\n\x17SafePositionsFrontSeats\x12Z\n\x04left\x18\x01 \x01(\x08\x42L\x92\xb5\x18H*FIndicates that the person in the left front seat is in a safe position\x12\\\n\x05right\x18\x02 \x01(\x08\x42M\x92\xb5\x18I*GIndicates that the person in the right front seat is in a safe position\"\xbc\x06\n\x0cVehicleInput\x12k\n\x11\x61\x63\x63\x65lerator_pedal\x18\x01 \x01(\x0b\x32#.SystemCore.Common.AcceleratorPedalB+\x92\xb5\x18\'*%Current accelerator pedal information\x12\\\n\x0c\x62rake_system\x18\x02 \x01(\x0b\x32\x1e.SystemCore.Common.BrakeSystemB&\x92\xb5\x18\"* Current brake system information\x12\x62\n\x0esteering_wheel\x18\x03 \x01(\x0b\x32 .SystemCore.Common.SteeringWheelB(\x92\xb5\x18$*\"Current steering wheel information\x12Y\n\x0b\x66ront_wheel\x18\x04 \x01(\x0b\x32\x1d.SystemCore.Common.FrontWheelB%\x92\xb5\x18!*\x1f\x43urrent front wheel information\x12g\n\x0eturn_indicator\x18\x05 \x01(\x0e\x32%.SystemCore.Common.TurnIndicatorStateB(\x92\xb5\x18$*\"Current turn indicator information\x12\x46\n\x10\x64river_door_open\x18\x06 \x01(\x08\x42,\x92\xb5\x18(*&Indicates that the driver door is open\x12\x96\x01\n\x1asafe_positions_front_seats\x18\x07 \x01(\x0b\x32*.SystemCore.Common.SafePositionsFrontSeatsBF\x92\xb5\x18\x42*@Indicates safety status of driver and passenger seating position:X\x8a\xb5\x18\x02(\x03\x8a\xb5\x18<\":Driver input signals e.g. pedal state, turn indicator, etc\x8a\xb5\x18\x02\x08\x01\x8a\xb5\x18\x02\x10\x03\x8a\xb5\x18\x02\x18\x01*\xe9\x01\n\x16\x41ngleControlLimitState\x12)\n%ANGLE_CONTROL_LIMIT_STATE_NOT_LIMITED\x10\x00\x12\x38\n4ANGLE_CONTROL_LIMIT_STATE_TORQUE_LIMIT_UPPER_REACHED\x10\x01\x12\x38\n4ANGLE_CONTROL_LIMIT_STATE_TORQUE_LIMIT_LOWER_REACHED\x10\x02\x12\x30\n,ANGLE_CONTROL_LIMIT_STATE_RATE_LIMIT_REACHED\x10\x03*t\n\x0f\x42rakePedalState\x12\x1f\n\x1b\x42RAKE_PEDAL_STATE_UNDEFINED\x10\x00\x12!\n\x1d\x42RAKE_PEDAL_STATE_NOT_PRESSED\x10\x01\x12\x1d\n\x19\x42RAKE_PEDAL_STATE_PRESSED\x10\x02*r\n\x12TurnIndicatorState\x12\x1d\n\x19TURN_INDICATOR_STATE_IDLE\x10\x00\x12\x1d\n\x19TURN_INDICATOR_STATE_LEFT\x10\x01\x12\x1e\n\x1aTURN_INDICATOR_STATE_RIGHT\x10\x02\x62\x06proto3'
  ,
  dependencies=[Tools_dot_Extension_dot_SystemOptions__pb2.DESCRIPTOR,])

_ANGLECONTROLLIMITSTATE = _descriptor.EnumDescriptor(
  name='AngleControlLimitState',
  full_name='SystemCore.Common.AngleControlLimitState',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ANGLE_CONTROL_LIMIT_STATE_NOT_LIMITED', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ANGLE_CONTROL_LIMIT_STATE_TORQUE_LIMIT_UPPER_REACHED', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ANGLE_CONTROL_LIMIT_STATE_TORQUE_LIMIT_LOWER_REACHED', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ANGLE_CONTROL_LIMIT_STATE_RATE_LIMIT_REACHED', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=2718,
  serialized_end=2951,
)
_sym_db.RegisterEnumDescriptor(_ANGLECONTROLLIMITSTATE)

AngleControlLimitState = enum_type_wrapper.EnumTypeWrapper(_ANGLECONTROLLIMITSTATE)
_BRAKEPEDALSTATE = _descriptor.EnumDescriptor(
  name='BrakePedalState',
  full_name='SystemCore.Common.BrakePedalState',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='BRAKE_PEDAL_STATE_UNDEFINED', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='BRAKE_PEDAL_STATE_NOT_PRESSED', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='BRAKE_PEDAL_STATE_PRESSED', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=2953,
  serialized_end=3069,
)
_sym_db.RegisterEnumDescriptor(_BRAKEPEDALSTATE)

BrakePedalState = enum_type_wrapper.EnumTypeWrapper(_BRAKEPEDALSTATE)
_TURNINDICATORSTATE = _descriptor.EnumDescriptor(
  name='TurnIndicatorState',
  full_name='SystemCore.Common.TurnIndicatorState',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='TURN_INDICATOR_STATE_IDLE', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='TURN_INDICATOR_STATE_LEFT', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='TURN_INDICATOR_STATE_RIGHT', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=3071,
  serialized_end=3185,
)
_sym_db.RegisterEnumDescriptor(_TURNINDICATORSTATE)

TurnIndicatorState = enum_type_wrapper.EnumTypeWrapper(_TURNINDICATORSTATE)
ANGLE_CONTROL_LIMIT_STATE_NOT_LIMITED = 0
ANGLE_CONTROL_LIMIT_STATE_TORQUE_LIMIT_UPPER_REACHED = 1
ANGLE_CONTROL_LIMIT_STATE_TORQUE_LIMIT_LOWER_REACHED = 2
ANGLE_CONTROL_LIMIT_STATE_RATE_LIMIT_REACHED = 3
BRAKE_PEDAL_STATE_UNDEFINED = 0
BRAKE_PEDAL_STATE_NOT_PRESSED = 1
BRAKE_PEDAL_STATE_PRESSED = 2
TURN_INDICATOR_STATE_IDLE = 0
TURN_INDICATOR_STATE_LEFT = 1
TURN_INDICATOR_STATE_RIGHT = 2



_ACCELERATORPEDAL = _descriptor.Descriptor(
  name='AcceleratorPedal',
  full_name='SystemCore.Common.AcceleratorPedal',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='valid', full_name='SystemCore.Common.AcceleratorPedal.valid', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222\265\030F*DIndicates that the information contained in this message can be used', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='pressed_amount', full_name='SystemCore.Common.AcceleratorPedal.pressed_amount', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222\265\030\002\010\010\222\265\030\tQ\000\000\000\000\000\000Y@\222\265\030\003\"\001%\222\265\030:*8Percentage describing the state of the accelerator pedal', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=97,
  serialized_end=320,
)


_BRAKESYSTEM = _descriptor.Descriptor(
  name='BrakeSystem',
  full_name='SystemCore.Common.BrakeSystem',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='valid', full_name='SystemCore.Common.BrakeSystem.valid', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222\265\030F*DIndicates that the information contained in this message can be used', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='brake_pedal_state', full_name='SystemCore.Common.BrakeSystem.brake_pedal_state', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222\265\030\032*\030State of the brake pedal', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='deceleration_request', full_name='SystemCore.Common.BrakeSystem.deceleration_request', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222\265\030\002\010\020\222\265\030\0062\0040.01\222\265\030\tQ\000\000\000\000\000\0009@\222\265\030\007\"\005m/s\302\262\222\265\030Z*XRequested deceleration by driver, positive since it is deceleration and not acceleration', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=323,
  serialized_end=690,
)


_STEERINGWHEEL = _descriptor.Descriptor(
  name='SteeringWheel',
  full_name='SystemCore.Common.SteeringWheel',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='valid', full_name='SystemCore.Common.SteeringWheel.valid', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222\265\030F*DIndicates that the information contained in this message can be used', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='limited', full_name='SystemCore.Common.SteeringWheel.limited', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222\265\0303*1If the function output on the steering is limited', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='torque', full_name='SystemCore.Common.SteeringWheel.torque', index=2,
      number=3, type=17, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222\265\030\0062\0040.01\222\265\030\tI\000\000\000\000\000\000>\300\222\265\030\tQ\000\000\000\000\000\000>@\222\265\030\004\"\002Nm\222\265\0303*1The steering wheel torque performed by the driver', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='function_applied_torque', full_name='SystemCore.Common.SteeringWheel.function_applied_torque', index=3,
      number=4, type=17, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222\265\030\0062\0040.01\222\265\030\tI\000\000\000\000\000\000>\300\222\265\030\tQ\000\000\000\000\000\000>@\222\265\030\004\"\002Nm\222\265\0305*3The steering wheel torque performed by the function', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='total_applied_torque', full_name='SystemCore.Common.SteeringWheel.total_applied_torque', index=4,
      number=5, type=17, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222\265\030\0062\0040.01\222\265\030\tI\000\000\000\000\000\000>\300\222\265\030\tQ\000\000\000\000\000\000>@\222\265\030\004\"\002Nm\222\265\030`*^The total torque performed by electric power assisted steering, defined at the steering wheel.', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=693,
  serialized_end=1348,
)


_FRONTWHEEL = _descriptor.Descriptor(
  name='FrontWheel',
  full_name='SystemCore.Common.FrontWheel',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='valid', full_name='SystemCore.Common.FrontWheel.valid', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222\265\030F*DIndicates that the information contained in this message can be used', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='angle', full_name='SystemCore.Common.FrontWheel.angle', index=1,
      number=2, type=17, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222\265\030\0102\0060.0001\222\265\030\tI\000\000\000\000\000\000\370\277\222\265\030\tQ\000\000\000\000\000\000\370?\222\265\030\005\"\003rad\222\265\030\"* The front wheel angle of the car', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='angle_rate', full_name='SystemCore.Common.FrontWheel.angle_rate', index=2,
      number=4, type=17, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222\265\030\0102\0060.0001\222\265\030\tI\000\000\000\000\000\000\370\277\222\265\030\tQ\000\000\000\000\000\000\370?\222\265\030\007\"\005rad/s\222\265\030\'*%The front wheel angle rate of the car', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1351,
  serialized_end=1670,
)


_SAFEPOSITIONSFRONTSEATS = _descriptor.Descriptor(
  name='SafePositionsFrontSeats',
  full_name='SystemCore.Common.SafePositionsFrontSeats',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='left', full_name='SystemCore.Common.SafePositionsFrontSeats.left', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222\265\030H*FIndicates that the person in the left front seat is in a safe position', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='right', full_name='SystemCore.Common.SafePositionsFrontSeats.right', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222\265\030I*GIndicates that the person in the right front seat is in a safe position', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1673,
  serialized_end=1884,
)


_VEHICLEINPUT = _descriptor.Descriptor(
  name='VehicleInput',
  full_name='SystemCore.Common.VehicleInput',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='accelerator_pedal', full_name='SystemCore.Common.VehicleInput.accelerator_pedal', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222\265\030\'*%Current accelerator pedal information', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='brake_system', full_name='SystemCore.Common.VehicleInput.brake_system', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222\265\030\"* Current brake system information', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='steering_wheel', full_name='SystemCore.Common.VehicleInput.steering_wheel', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222\265\030$*\"Current steering wheel information', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='front_wheel', full_name='SystemCore.Common.VehicleInput.front_wheel', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222\265\030!*\037Current front wheel information', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='turn_indicator', full_name='SystemCore.Common.VehicleInput.turn_indicator', index=4,
      number=5, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222\265\030$*\"Current turn indicator information', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='driver_door_open', full_name='SystemCore.Common.VehicleInput.driver_door_open', index=5,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222\265\030(*&Indicates that the driver door is open', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='safe_positions_front_seats', full_name='SystemCore.Common.VehicleInput.safe_positions_front_seats', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222\265\030B*@Indicates safety status of driver and passenger seating position', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\265\030\002(\003\212\265\030<\":Driver input signals e.g. pedal state, turn indicator, etc\212\265\030\002\010\001\212\265\030\002\020\003\212\265\030\002\030\001',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1887,
  serialized_end=2715,
)

_BRAKESYSTEM.fields_by_name['brake_pedal_state'].enum_type = _BRAKEPEDALSTATE
_STEERINGWHEEL.fields_by_name['limited'].enum_type = _ANGLECONTROLLIMITSTATE
_VEHICLEINPUT.fields_by_name['accelerator_pedal'].message_type = _ACCELERATORPEDAL
_VEHICLEINPUT.fields_by_name['brake_system'].message_type = _BRAKESYSTEM
_VEHICLEINPUT.fields_by_name['steering_wheel'].message_type = _STEERINGWHEEL
_VEHICLEINPUT.fields_by_name['front_wheel'].message_type = _FRONTWHEEL
_VEHICLEINPUT.fields_by_name['turn_indicator'].enum_type = _TURNINDICATORSTATE
_VEHICLEINPUT.fields_by_name['safe_positions_front_seats'].message_type = _SAFEPOSITIONSFRONTSEATS
DESCRIPTOR.message_types_by_name['AcceleratorPedal'] = _ACCELERATORPEDAL
DESCRIPTOR.message_types_by_name['BrakeSystem'] = _BRAKESYSTEM
DESCRIPTOR.message_types_by_name['SteeringWheel'] = _STEERINGWHEEL
DESCRIPTOR.message_types_by_name['FrontWheel'] = _FRONTWHEEL
DESCRIPTOR.message_types_by_name['SafePositionsFrontSeats'] = _SAFEPOSITIONSFRONTSEATS
DESCRIPTOR.message_types_by_name['VehicleInput'] = _VEHICLEINPUT
DESCRIPTOR.enum_types_by_name['AngleControlLimitState'] = _ANGLECONTROLLIMITSTATE
DESCRIPTOR.enum_types_by_name['BrakePedalState'] = _BRAKEPEDALSTATE
DESCRIPTOR.enum_types_by_name['TurnIndicatorState'] = _TURNINDICATORSTATE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

AcceleratorPedal = _reflection.GeneratedProtocolMessageType('AcceleratorPedal', (_message.Message,), {
  'DESCRIPTOR' : _ACCELERATORPEDAL,
  '__module__' : 'SystemCore.Common.VehicleInput_pb2'
  # @@protoc_insertion_point(class_scope:SystemCore.Common.AcceleratorPedal)
  })
_sym_db.RegisterMessage(AcceleratorPedal)

BrakeSystem = _reflection.GeneratedProtocolMessageType('BrakeSystem', (_message.Message,), {
  'DESCRIPTOR' : _BRAKESYSTEM,
  '__module__' : 'SystemCore.Common.VehicleInput_pb2'
  # @@protoc_insertion_point(class_scope:SystemCore.Common.BrakeSystem)
  })
_sym_db.RegisterMessage(BrakeSystem)

SteeringWheel = _reflection.GeneratedProtocolMessageType('SteeringWheel', (_message.Message,), {
  'DESCRIPTOR' : _STEERINGWHEEL,
  '__module__' : 'SystemCore.Common.VehicleInput_pb2'
  # @@protoc_insertion_point(class_scope:SystemCore.Common.SteeringWheel)
  })
_sym_db.RegisterMessage(SteeringWheel)

FrontWheel = _reflection.GeneratedProtocolMessageType('FrontWheel', (_message.Message,), {
  'DESCRIPTOR' : _FRONTWHEEL,
  '__module__' : 'SystemCore.Common.VehicleInput_pb2'
  # @@protoc_insertion_point(class_scope:SystemCore.Common.FrontWheel)
  })
_sym_db.RegisterMessage(FrontWheel)

SafePositionsFrontSeats = _reflection.GeneratedProtocolMessageType('SafePositionsFrontSeats', (_message.Message,), {
  'DESCRIPTOR' : _SAFEPOSITIONSFRONTSEATS,
  '__module__' : 'SystemCore.Common.VehicleInput_pb2'
  # @@protoc_insertion_point(class_scope:SystemCore.Common.SafePositionsFrontSeats)
  })
_sym_db.RegisterMessage(SafePositionsFrontSeats)

VehicleInput = _reflection.GeneratedProtocolMessageType('VehicleInput', (_message.Message,), {
  'DESCRIPTOR' : _VEHICLEINPUT,
  '__module__' : 'SystemCore.Common.VehicleInput_pb2'
  # @@protoc_insertion_point(class_scope:SystemCore.Common.VehicleInput)
  })
_sym_db.RegisterMessage(VehicleInput)


_ACCELERATORPEDAL.fields_by_name['valid']._options = None
_ACCELERATORPEDAL.fields_by_name['pressed_amount']._options = None
_BRAKESYSTEM.fields_by_name['valid']._options = None
_BRAKESYSTEM.fields_by_name['brake_pedal_state']._options = None
_BRAKESYSTEM.fields_by_name['deceleration_request']._options = None
_STEERINGWHEEL.fields_by_name['valid']._options = None
_STEERINGWHEEL.fields_by_name['limited']._options = None
_STEERINGWHEEL.fields_by_name['torque']._options = None
_STEERINGWHEEL.fields_by_name['function_applied_torque']._options = None
_STEERINGWHEEL.fields_by_name['total_applied_torque']._options = None
_FRONTWHEEL.fields_by_name['valid']._options = None
_FRONTWHEEL.fields_by_name['angle']._options = None
_FRONTWHEEL.fields_by_name['angle_rate']._options = None
_SAFEPOSITIONSFRONTSEATS.fields_by_name['left']._options = None
_SAFEPOSITIONSFRONTSEATS.fields_by_name['right']._options = None
_VEHICLEINPUT.fields_by_name['accelerator_pedal']._options = None
_VEHICLEINPUT.fields_by_name['brake_system']._options = None
_VEHICLEINPUT.fields_by_name['steering_wheel']._options = None
_VEHICLEINPUT.fields_by_name['front_wheel']._options = None
_VEHICLEINPUT.fields_by_name['turn_indicator']._options = None
_VEHICLEINPUT.fields_by_name['driver_door_open']._options = None
_VEHICLEINPUT.fields_by_name['safe_positions_front_seats']._options = None
_VEHICLEINPUT._options = None
# @@protoc_insertion_point(module_scope)
